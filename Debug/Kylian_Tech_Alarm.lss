
Kylian_Tech_Alarm.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000ae  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000d8e  2**0
                  ALLOC, LOAD, DATA
  2 .bss          00000004  00800060  00800060  00000d8e  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  00000d8e  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 00000054  00000000  00000000  00000dbd  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000128  00000000  00000000  00000e11  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002c83  00000000  00000000  00000f39  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a76  00000000  00000000  00003bbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dbc  00000000  00000000  00004632  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000270  00000000  00000000  000053f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002b6  00000000  00000000  00005660  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001075  00000000  00000000  00005916  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  0000698b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  00000ccc  00000ccc  00000d80  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00006a64  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .text.App_Init 0000002c  00000c08  00000c08  00000cbc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .progmemx.data 00000031  000000ae  000000ae  00000162  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 17 .text.LCD_FIRST_Page 00000050  00000ad4  00000ad4  00000b88  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.LCD_Seconed_Page 000000c4  000007a0  000007a0  00000854  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.Main_Task 0000014c  000002b0  000002b0  00000364  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.App_main 00000010  00000c9e  00000c9e  00000d52  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .bss.D_Counter 00000001  00800064  00800064  00000d8e  2**0
                  ALLOC
 22 .bss.C_Counter 00000001  00800065  00800065  00000d8e  2**0
                  ALLOC
 23 .bss.B_Counter 00000001  00800066  00800066  00000d8e  2**0
                  ALLOC
 24 .bss.A_Counter 00000001  00800067  00800067  00000d8e  2**0
                  ALLOC
 25 .text.BTN_Initialization 0000000a  00000cae  00000cae  00000d62  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.BTN_pressed 0000007c  00000906  00000906  000009ba  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.LCD_Write_Command 000000d4  000005f8  000005f8  000006ac  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.LCD_Initialize 0000007c  00000982  00000982  00000a36  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.LCD_Clear 0000000a  00000cb8  00000cb8  00000d6c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.LCD_Write_Character 000000d4  000006cc  000006cc  00000780  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.LCD_Write_String 0000002e  00000bda  00000bda  00000c8e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.LCD_Write_Number 000001d0  000000e0  000000e0  00000194  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.LCD_LINE_position 00000048  00000b24  00000b24  00000bd8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.main    0000000a  00000cc2  00000cc2  00000d76  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text.DIO_SetPin_Direction 000000fe  000003fc  000003fc  000004b0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .text.DIO_SetPin_Value 000000fe  000004fa  000004fa  000005ae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text.DIO_GetPin_Value 00000074  000009fe  000009fe  00000ab2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.libgcc.div 00000062  00000a72  00000a72  00000b26  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.libgcc.div 0000001c  00000c54  00000c54  00000d08  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .text.libgcc.div 000000a2  00000864  00000864  00000918  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 .text.libgcc  00000020  00000c34  00000c34  00000ce8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .text.libgcc.prologue 00000038  00000b6c  00000b6c  00000c20  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .text.libgcc.prologue 00000036  00000ba4  00000ba4  00000c58  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text.libgcc  00000018  00000c70  00000c70  00000d24  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.__dummy_fini 00000002  00000cd4  00000cd4  00000d88  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .text.__dummy_funcs_on_exit 00000002  00000cd6  00000cd6  00000d8a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .text.__dummy_simulator_exit 00000002  00000cd8  00000cd8  00000d8c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .text.exit    00000016  00000c88  00000c88  00000d3c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .text._Exit   00000004  00000cd0  00000cd0  00000d84  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2d 00 	jmp	0x5a	; 0x5a <__ctors_end>
   4:	0c 94 66 06 	jmp	0xccc	; 0xccc <__bad_interrupt>
   8:	0c 94 66 06 	jmp	0xccc	; 0xccc <__bad_interrupt>
   c:	0c 94 66 06 	jmp	0xccc	; 0xccc <__bad_interrupt>
  10:	0c 94 66 06 	jmp	0xccc	; 0xccc <__bad_interrupt>
  14:	0c 94 66 06 	jmp	0xccc	; 0xccc <__bad_interrupt>
  18:	0c 94 66 06 	jmp	0xccc	; 0xccc <__bad_interrupt>
  1c:	0c 94 66 06 	jmp	0xccc	; 0xccc <__bad_interrupt>
  20:	0c 94 66 06 	jmp	0xccc	; 0xccc <__bad_interrupt>
  24:	0c 94 66 06 	jmp	0xccc	; 0xccc <__bad_interrupt>
  28:	0c 94 66 06 	jmp	0xccc	; 0xccc <__bad_interrupt>
  2c:	0c 94 66 06 	jmp	0xccc	; 0xccc <__bad_interrupt>
  30:	0c 94 66 06 	jmp	0xccc	; 0xccc <__bad_interrupt>
  34:	0c 94 66 06 	jmp	0xccc	; 0xccc <__bad_interrupt>
  38:	0c 94 66 06 	jmp	0xccc	; 0xccc <__bad_interrupt>
  3c:	0c 94 66 06 	jmp	0xccc	; 0xccc <__bad_interrupt>
  40:	0c 94 66 06 	jmp	0xccc	; 0xccc <__bad_interrupt>
  44:	0c 94 66 06 	jmp	0xccc	; 0xccc <__bad_interrupt>
  48:	0c 94 66 06 	jmp	0xccc	; 0xccc <__bad_interrupt>
  4c:	0c 94 66 06 	jmp	0xccc	; 0xccc <__bad_interrupt>
  50:	0c 94 66 06 	jmp	0xccc	; 0xccc <__bad_interrupt>

00000054 <.dinit>:
  54:	00 60       	ori	r16, 0x00	; 0
  56:	00 68       	ori	r16, 0x80	; 128
  58:	80 00       	.word	0x0080	; ????

0000005a <__ctors_end>:
  5a:	11 24       	eor	r1, r1
  5c:	1f be       	out	0x3f, r1	; 63
  5e:	cf e5       	ldi	r28, 0x5F	; 95
  60:	d8 e0       	ldi	r29, 0x08	; 8
  62:	de bf       	out	0x3e, r29	; 62
  64:	cd bf       	out	0x3d, r28	; 61

00000066 <__do_copy_data>:
  66:	e4 e5       	ldi	r30, 0x54	; 84
  68:	f0 e0       	ldi	r31, 0x00	; 0
  6a:	40 e0       	ldi	r20, 0x00	; 0
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__do_clear_bss+0x8>
  6e:	b5 91       	lpm	r27, Z+
  70:	a5 91       	lpm	r26, Z+
  72:	35 91       	lpm	r19, Z+
  74:	25 91       	lpm	r18, Z+
  76:	05 91       	lpm	r16, Z+
  78:	07 fd       	sbrc	r16, 7
  7a:	0c c0       	rjmp	.+24     	; 0x94 <__do_clear_bss>
  7c:	95 91       	lpm	r25, Z+
  7e:	85 91       	lpm	r24, Z+
  80:	ef 01       	movw	r28, r30
  82:	f9 2f       	mov	r31, r25
  84:	e8 2f       	mov	r30, r24
  86:	05 90       	lpm	r0, Z+
  88:	0d 92       	st	X+, r0
  8a:	a2 17       	cp	r26, r18
  8c:	b3 07       	cpc	r27, r19
  8e:	d9 f7       	brne	.-10     	; 0x86 <__do_copy_data+0x20>
  90:	fe 01       	movw	r30, r28
  92:	04 c0       	rjmp	.+8      	; 0x9c <__do_clear_bss+0x8>

00000094 <__do_clear_bss>:
  94:	1d 92       	st	X+, r1
  96:	a2 17       	cp	r26, r18
  98:	b3 07       	cpc	r27, r19
  9a:	e1 f7       	brne	.-8      	; 0x94 <__do_clear_bss>
  9c:	e9 35       	cpi	r30, 0x59	; 89
  9e:	f4 07       	cpc	r31, r20
  a0:	31 f7       	brne	.-52     	; 0x6e <__do_copy_data+0x8>
  a2:	0e 94 61 06 	call	0xcc2	; 0xcc2 <main>
  a6:	0c 94 44 06 	jmp	0xc88	; 0xc88 <exit>

000000aa <_exit>:
  aa:	f8 94       	cli

000000ac <__stop_program>:
  ac:	ff cf       	rjmp	.-2      	; 0xac <__stop_program>

Disassembly of section .text:

00000ccc <__bad_interrupt>:
 ccc:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.App_Init:

00000c08 <App_Init>:
bool PINB_State;
bool PINC_State;
bool PIND_State;

State_Error App_Init(void){
	LCD_Initialize();
 c08:	0e 94 c1 04 	call	0x982	; 0x982 <LCD_Initialize>
	BTN_Initialization(DIO_PORTD,A_PIN); // for A
 c0c:	63 e0       	ldi	r22, 0x03	; 3
 c0e:	83 e0       	ldi	r24, 0x03	; 3
 c10:	0e 94 57 06 	call	0xcae	; 0xcae <BTN_Initialization>
	BTN_Initialization(DIO_PORTD,B_PIN); // for B
 c14:	65 e0       	ldi	r22, 0x05	; 5
 c16:	83 e0       	ldi	r24, 0x03	; 3
 c18:	0e 94 57 06 	call	0xcae	; 0xcae <BTN_Initialization>
	BTN_Initialization(DIO_PORTD,C_PIN); // for C
 c1c:	66 e0       	ldi	r22, 0x06	; 6
 c1e:	83 e0       	ldi	r24, 0x03	; 3
 c20:	0e 94 57 06 	call	0xcae	; 0xcae <BTN_Initialization>
	BTN_Initialization(DIO_PORTD,D_PIN); // for D
 c24:	67 e0       	ldi	r22, 0x07	; 7
 c26:	83 e0       	ldi	r24, 0x03	; 3
 c28:	0e 94 57 06 	call	0xcae	; 0xcae <BTN_Initialization>
	LCD_Initialize();
 c2c:	0e 94 c1 04 	call	0x982	; 0x982 <LCD_Initialize>
	return State_SUCCESS;
}
 c30:	81 e0       	ldi	r24, 0x01	; 1
 c32:	08 95       	ret

Disassembly of section .text.LCD_FIRST_Page:

00000ad4 <LCD_FIRST_Page>:
    LCD_Seconed_Page();
	Main_Task();
	return Local_Error;
}
State_Error LCD_FIRST_Page(void){
	LCD_LINE_position(LCD_LINE1,1);
 ad4:	61 e0       	ldi	r22, 0x01	; 1
 ad6:	80 e0       	ldi	r24, 0x00	; 0
 ad8:	0e 94 92 05 	call	0xb24	; 0xb24 <LCD_LINE_position>
	LCD_Write_String("Electronic Voting");
 adc:	6e ea       	ldi	r22, 0xAE	; 174
 ade:	70 e0       	ldi	r23, 0x00	; 0
 ae0:	80 e0       	ldi	r24, 0x00	; 0
 ae2:	0e 94 ed 05 	call	0xbda	; 0xbda <LCD_Write_String>
	LCD_LINE_position(LCD_LINE2,6);
 ae6:	66 e0       	ldi	r22, 0x06	; 6
 ae8:	81 e0       	ldi	r24, 0x01	; 1
 aea:	0e 94 92 05 	call	0xb24	; 0xb24 <LCD_LINE_position>
	LCD_Write_String("Machine");
 aee:	60 ec       	ldi	r22, 0xC0	; 192
 af0:	70 e0       	ldi	r23, 0x00	; 0
 af2:	80 e0       	ldi	r24, 0x00	; 0
 af4:	0e 94 ed 05 	call	0xbda	; 0xbda <LCD_Write_String>
	LCD_LINE_position(LCD_LINE3,3);
 af8:	63 e0       	ldi	r22, 0x03	; 3
 afa:	82 e0       	ldi	r24, 0x02	; 2
 afc:	0e 94 92 05 	call	0xb24	; 0xb24 <LCD_LINE_position>
	LCD_Write_String("Azza Saeed");
 b00:	68 ec       	ldi	r22, 0xC8	; 200
 b02:	70 e0       	ldi	r23, 0x00	; 0
 b04:	80 e0       	ldi	r24, 0x00	; 0
 b06:	0e 94 ed 05 	call	0xbda	; 0xbda <LCD_Write_String>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 b0a:	2f ef       	ldi	r18, 0xFF	; 255
 b0c:	83 ec       	ldi	r24, 0xC3	; 195
 b0e:	99 e0       	ldi	r25, 0x09	; 9
 b10:	21 50       	subi	r18, 0x01	; 1
 b12:	80 40       	sbci	r24, 0x00	; 0
 b14:	90 40       	sbci	r25, 0x00	; 0
 b16:	e1 f7       	brne	.-8      	; 0xb10 <LCD_FIRST_Page+0x3c>
 b18:	00 c0       	rjmp	.+0      	; 0xb1a <LCD_FIRST_Page+0x46>
 b1a:	00 00       	nop
	_delay_ms(200);
	LCD_Clear();
 b1c:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <LCD_Clear>
	return State_SUCCESS;
}
 b20:	81 e0       	ldi	r24, 0x01	; 1
 b22:	08 95       	ret

Disassembly of section .text.LCD_Seconed_Page:

000007a0 <LCD_Seconed_Page>:
State_Error LCD_Seconed_Page(void){
	LCD_LINE_position(LCD_LINE1,1);
 7a0:	61 e0       	ldi	r22, 0x01	; 1
 7a2:	80 e0       	ldi	r24, 0x00	; 0
 7a4:	0e 94 92 05 	call	0xb24	; 0xb24 <LCD_LINE_position>
	LCD_Write_String("A=");
 7a8:	63 ed       	ldi	r22, 0xD3	; 211
 7aa:	70 e0       	ldi	r23, 0x00	; 0
 7ac:	80 e0       	ldi	r24, 0x00	; 0
 7ae:	0e 94 ed 05 	call	0xbda	; 0xbda <LCD_Write_String>
	LCD_LINE_position(LCD_LINE1,3);
 7b2:	63 e0       	ldi	r22, 0x03	; 3
 7b4:	80 e0       	ldi	r24, 0x00	; 0
 7b6:	0e 94 92 05 	call	0xb24	; 0xb24 <LCD_LINE_position>
	LCD_Write_Number(A_Counter);
 7ba:	20 91 67 00 	lds	r18, 0x0067	; 0x800067 <A_Counter>
 7be:	30 e0       	ldi	r19, 0x00	; 0
 7c0:	40 e0       	ldi	r20, 0x00	; 0
 7c2:	50 e0       	ldi	r21, 0x00	; 0
 7c4:	60 e0       	ldi	r22, 0x00	; 0
 7c6:	70 e0       	ldi	r23, 0x00	; 0
 7c8:	80 e0       	ldi	r24, 0x00	; 0
 7ca:	90 e0       	ldi	r25, 0x00	; 0
 7cc:	0e 94 70 00 	call	0xe0	; 0xe0 <LCD_Write_Number>
	LCD_LINE_position(LCD_LINE1,10);
 7d0:	6a e0       	ldi	r22, 0x0A	; 10
 7d2:	80 e0       	ldi	r24, 0x00	; 0
 7d4:	0e 94 92 05 	call	0xb24	; 0xb24 <LCD_LINE_position>
	LCD_Write_String("B=");	
 7d8:	66 ed       	ldi	r22, 0xD6	; 214
 7da:	70 e0       	ldi	r23, 0x00	; 0
 7dc:	80 e0       	ldi	r24, 0x00	; 0
 7de:	0e 94 ed 05 	call	0xbda	; 0xbda <LCD_Write_String>
	LCD_LINE_position(LCD_LINE1,12);
 7e2:	6c e0       	ldi	r22, 0x0C	; 12
 7e4:	80 e0       	ldi	r24, 0x00	; 0
 7e6:	0e 94 92 05 	call	0xb24	; 0xb24 <LCD_LINE_position>
	LCD_Write_Number(B_Counter);
 7ea:	20 91 66 00 	lds	r18, 0x0066	; 0x800066 <B_Counter>
 7ee:	30 e0       	ldi	r19, 0x00	; 0
 7f0:	40 e0       	ldi	r20, 0x00	; 0
 7f2:	50 e0       	ldi	r21, 0x00	; 0
 7f4:	60 e0       	ldi	r22, 0x00	; 0
 7f6:	70 e0       	ldi	r23, 0x00	; 0
 7f8:	80 e0       	ldi	r24, 0x00	; 0
 7fa:	90 e0       	ldi	r25, 0x00	; 0
 7fc:	0e 94 70 00 	call	0xe0	; 0xe0 <LCD_Write_Number>
	LCD_LINE_position(LCD_LINE3,1);
 800:	61 e0       	ldi	r22, 0x01	; 1
 802:	82 e0       	ldi	r24, 0x02	; 2
 804:	0e 94 92 05 	call	0xb24	; 0xb24 <LCD_LINE_position>
	LCD_Write_String("C=");
 808:	69 ed       	ldi	r22, 0xD9	; 217
 80a:	70 e0       	ldi	r23, 0x00	; 0
 80c:	80 e0       	ldi	r24, 0x00	; 0
 80e:	0e 94 ed 05 	call	0xbda	; 0xbda <LCD_Write_String>
	LCD_LINE_position(LCD_LINE3,3);
 812:	63 e0       	ldi	r22, 0x03	; 3
 814:	82 e0       	ldi	r24, 0x02	; 2
 816:	0e 94 92 05 	call	0xb24	; 0xb24 <LCD_LINE_position>
	LCD_Write_Number(C_Counter);
 81a:	20 91 65 00 	lds	r18, 0x0065	; 0x800065 <C_Counter>
 81e:	30 e0       	ldi	r19, 0x00	; 0
 820:	40 e0       	ldi	r20, 0x00	; 0
 822:	50 e0       	ldi	r21, 0x00	; 0
 824:	60 e0       	ldi	r22, 0x00	; 0
 826:	70 e0       	ldi	r23, 0x00	; 0
 828:	80 e0       	ldi	r24, 0x00	; 0
 82a:	90 e0       	ldi	r25, 0x00	; 0
 82c:	0e 94 70 00 	call	0xe0	; 0xe0 <LCD_Write_Number>
	LCD_LINE_position(LCD_LINE3,10);
 830:	6a e0       	ldi	r22, 0x0A	; 10
 832:	82 e0       	ldi	r24, 0x02	; 2
 834:	0e 94 92 05 	call	0xb24	; 0xb24 <LCD_LINE_position>
	LCD_Write_String("D=");
 838:	6c ed       	ldi	r22, 0xDC	; 220
 83a:	70 e0       	ldi	r23, 0x00	; 0
 83c:	80 e0       	ldi	r24, 0x00	; 0
 83e:	0e 94 ed 05 	call	0xbda	; 0xbda <LCD_Write_String>
	LCD_LINE_position(LCD_LINE3,12);
 842:	6c e0       	ldi	r22, 0x0C	; 12
 844:	82 e0       	ldi	r24, 0x02	; 2
 846:	0e 94 92 05 	call	0xb24	; 0xb24 <LCD_LINE_position>
	LCD_Write_Number(D_Counter);
 84a:	20 91 64 00 	lds	r18, 0x0064	; 0x800064 <_end>
 84e:	30 e0       	ldi	r19, 0x00	; 0
 850:	40 e0       	ldi	r20, 0x00	; 0
 852:	50 e0       	ldi	r21, 0x00	; 0
 854:	60 e0       	ldi	r22, 0x00	; 0
 856:	70 e0       	ldi	r23, 0x00	; 0
 858:	80 e0       	ldi	r24, 0x00	; 0
 85a:	90 e0       	ldi	r25, 0x00	; 0
 85c:	0e 94 70 00 	call	0xe0	; 0xe0 <LCD_Write_Number>
	return State_SUCCESS;
}
 860:	81 e0       	ldi	r24, 0x01	; 1
 862:	08 95       	ret

Disassembly of section .text.Main_Task:

000002b0 <Main_Task>:
State_Error Main_Task(void){
	State_Error Local_Error=State_SUCCESS;
		BTN_pressed(DIO_PORTD,A_PIN,&PINA_State);
 2b0:	43 e6       	ldi	r20, 0x63	; 99
 2b2:	50 e0       	ldi	r21, 0x00	; 0
 2b4:	63 e0       	ldi	r22, 0x03	; 3
 2b6:	83 e0       	ldi	r24, 0x03	; 3
 2b8:	0e 94 83 04 	call	0x906	; 0x906 <BTN_pressed>
		BTN_pressed(DIO_PORTD,B_PIN,&PINB_State);
 2bc:	40 e6       	ldi	r20, 0x60	; 96
 2be:	50 e0       	ldi	r21, 0x00	; 0
 2c0:	65 e0       	ldi	r22, 0x05	; 5
 2c2:	83 e0       	ldi	r24, 0x03	; 3
 2c4:	0e 94 83 04 	call	0x906	; 0x906 <BTN_pressed>
		BTN_pressed(DIO_PORTD,C_PIN,&PINC_State);
 2c8:	42 e6       	ldi	r20, 0x62	; 98
 2ca:	50 e0       	ldi	r21, 0x00	; 0
 2cc:	66 e0       	ldi	r22, 0x06	; 6
 2ce:	83 e0       	ldi	r24, 0x03	; 3
 2d0:	0e 94 83 04 	call	0x906	; 0x906 <BTN_pressed>
		BTN_pressed(DIO_PORTD,D_PIN,&PIND_State);
 2d4:	41 e6       	ldi	r20, 0x61	; 97
 2d6:	50 e0       	ldi	r21, 0x00	; 0
 2d8:	67 e0       	ldi	r22, 0x07	; 7
 2da:	83 e0       	ldi	r24, 0x03	; 3
 2dc:	0e 94 83 04 	call	0x906	; 0x906 <BTN_pressed>
    if(PINA_State==HIGH){
 2e0:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <PINA_State>
 2e4:	81 30       	cpi	r24, 0x01	; 1
 2e6:	f9 f4       	brne	.+62     	; 0x326 <Main_Task+0x76>
		A_Counter++;
 2e8:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <A_Counter>
 2ec:	8f 5f       	subi	r24, 0xFF	; 255
 2ee:	80 93 67 00 	sts	0x0067, r24	; 0x800067 <A_Counter>
		LCD_LINE_position(LCD_LINE1,3);
 2f2:	63 e0       	ldi	r22, 0x03	; 3
 2f4:	80 e0       	ldi	r24, 0x00	; 0
 2f6:	0e 94 92 05 	call	0xb24	; 0xb24 <LCD_LINE_position>
		LCD_Write_Number(A_Counter);
 2fa:	20 91 67 00 	lds	r18, 0x0067	; 0x800067 <A_Counter>
 2fe:	30 e0       	ldi	r19, 0x00	; 0
 300:	40 e0       	ldi	r20, 0x00	; 0
 302:	50 e0       	ldi	r21, 0x00	; 0
 304:	60 e0       	ldi	r22, 0x00	; 0
 306:	70 e0       	ldi	r23, 0x00	; 0
 308:	80 e0       	ldi	r24, 0x00	; 0
 30a:	90 e0       	ldi	r25, 0x00	; 0
 30c:	0e 94 70 00 	call	0xe0	; 0xe0 <LCD_Write_Number>
 310:	2f ef       	ldi	r18, 0xFF	; 255
 312:	89 ef       	ldi	r24, 0xF9	; 249
 314:	90 e0       	ldi	r25, 0x00	; 0
 316:	21 50       	subi	r18, 0x01	; 1
 318:	80 40       	sbci	r24, 0x00	; 0
 31a:	90 40       	sbci	r25, 0x00	; 0
 31c:	e1 f7       	brne	.-8      	; 0x316 <Main_Task+0x66>
 31e:	00 c0       	rjmp	.+0      	; 0x320 <Main_Task+0x70>
 320:	00 00       	nop
	LCD_LINE_position(LCD_LINE3,12);
	LCD_Write_Number(D_Counter);
	return State_SUCCESS;
}
State_Error Main_Task(void){
	State_Error Local_Error=State_SUCCESS;
 322:	81 e0       	ldi	r24, 0x01	; 1
 324:	08 95       	ret
		A_Counter++;
		LCD_LINE_position(LCD_LINE1,3);
		LCD_Write_Number(A_Counter);
		_delay_ms(20);
	}
	else if(PINB_State==HIGH){
 326:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 32a:	81 30       	cpi	r24, 0x01	; 1
 32c:	f9 f4       	brne	.+62     	; 0x36c <Main_Task+0xbc>
		B_Counter++;
 32e:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <B_Counter>
 332:	8f 5f       	subi	r24, 0xFF	; 255
 334:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <B_Counter>
		LCD_LINE_position(LCD_LINE1,12);
 338:	6c e0       	ldi	r22, 0x0C	; 12
 33a:	80 e0       	ldi	r24, 0x00	; 0
 33c:	0e 94 92 05 	call	0xb24	; 0xb24 <LCD_LINE_position>
		LCD_Write_Number(B_Counter);	
 340:	20 91 66 00 	lds	r18, 0x0066	; 0x800066 <B_Counter>
 344:	30 e0       	ldi	r19, 0x00	; 0
 346:	40 e0       	ldi	r20, 0x00	; 0
 348:	50 e0       	ldi	r21, 0x00	; 0
 34a:	60 e0       	ldi	r22, 0x00	; 0
 34c:	70 e0       	ldi	r23, 0x00	; 0
 34e:	80 e0       	ldi	r24, 0x00	; 0
 350:	90 e0       	ldi	r25, 0x00	; 0
 352:	0e 94 70 00 	call	0xe0	; 0xe0 <LCD_Write_Number>
 356:	2f ef       	ldi	r18, 0xFF	; 255
 358:	89 ef       	ldi	r24, 0xF9	; 249
 35a:	90 e0       	ldi	r25, 0x00	; 0
 35c:	21 50       	subi	r18, 0x01	; 1
 35e:	80 40       	sbci	r24, 0x00	; 0
 360:	90 40       	sbci	r25, 0x00	; 0
 362:	e1 f7       	brne	.-8      	; 0x35c <Main_Task+0xac>
 364:	00 c0       	rjmp	.+0      	; 0x366 <Main_Task+0xb6>
 366:	00 00       	nop
	LCD_LINE_position(LCD_LINE3,12);
	LCD_Write_Number(D_Counter);
	return State_SUCCESS;
}
State_Error Main_Task(void){
	State_Error Local_Error=State_SUCCESS;
 368:	81 e0       	ldi	r24, 0x01	; 1
 36a:	08 95       	ret
		B_Counter++;
		LCD_LINE_position(LCD_LINE1,12);
		LCD_Write_Number(B_Counter);	
		_delay_ms(20);
	}
	else if(PINC_State==HIGH){
 36c:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <PINC_State>
 370:	81 30       	cpi	r24, 0x01	; 1
 372:	f9 f4       	brne	.+62     	; 0x3b2 <Main_Task+0x102>
		C_Counter++;
 374:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <C_Counter>
 378:	8f 5f       	subi	r24, 0xFF	; 255
 37a:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <C_Counter>
		LCD_LINE_position(LCD_LINE3,3);
 37e:	63 e0       	ldi	r22, 0x03	; 3
 380:	82 e0       	ldi	r24, 0x02	; 2
 382:	0e 94 92 05 	call	0xb24	; 0xb24 <LCD_LINE_position>
		LCD_Write_Number(C_Counter);
 386:	20 91 65 00 	lds	r18, 0x0065	; 0x800065 <C_Counter>
 38a:	30 e0       	ldi	r19, 0x00	; 0
 38c:	40 e0       	ldi	r20, 0x00	; 0
 38e:	50 e0       	ldi	r21, 0x00	; 0
 390:	60 e0       	ldi	r22, 0x00	; 0
 392:	70 e0       	ldi	r23, 0x00	; 0
 394:	80 e0       	ldi	r24, 0x00	; 0
 396:	90 e0       	ldi	r25, 0x00	; 0
 398:	0e 94 70 00 	call	0xe0	; 0xe0 <LCD_Write_Number>
 39c:	2f ef       	ldi	r18, 0xFF	; 255
 39e:	89 ef       	ldi	r24, 0xF9	; 249
 3a0:	90 e0       	ldi	r25, 0x00	; 0
 3a2:	21 50       	subi	r18, 0x01	; 1
 3a4:	80 40       	sbci	r24, 0x00	; 0
 3a6:	90 40       	sbci	r25, 0x00	; 0
 3a8:	e1 f7       	brne	.-8      	; 0x3a2 <Main_Task+0xf2>
 3aa:	00 c0       	rjmp	.+0      	; 0x3ac <Main_Task+0xfc>
 3ac:	00 00       	nop
	LCD_LINE_position(LCD_LINE3,12);
	LCD_Write_Number(D_Counter);
	return State_SUCCESS;
}
State_Error Main_Task(void){
	State_Error Local_Error=State_SUCCESS;
 3ae:	81 e0       	ldi	r24, 0x01	; 1
 3b0:	08 95       	ret
		C_Counter++;
		LCD_LINE_position(LCD_LINE3,3);
		LCD_Write_Number(C_Counter);
			_delay_ms(20);
	}
	else if(PIND_State==HIGH){
 3b2:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <PIND_State>
 3b6:	81 30       	cpi	r24, 0x01	; 1
 3b8:	f9 f4       	brne	.+62     	; 0x3f8 <Main_Task+0x148>
		D_Counter++;
 3ba:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <_end>
 3be:	8f 5f       	subi	r24, 0xFF	; 255
 3c0:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <_end>
		LCD_LINE_position(LCD_LINE3,12);
 3c4:	6c e0       	ldi	r22, 0x0C	; 12
 3c6:	82 e0       	ldi	r24, 0x02	; 2
 3c8:	0e 94 92 05 	call	0xb24	; 0xb24 <LCD_LINE_position>
		LCD_Write_Number(D_Counter);		
 3cc:	20 91 64 00 	lds	r18, 0x0064	; 0x800064 <_end>
 3d0:	30 e0       	ldi	r19, 0x00	; 0
 3d2:	40 e0       	ldi	r20, 0x00	; 0
 3d4:	50 e0       	ldi	r21, 0x00	; 0
 3d6:	60 e0       	ldi	r22, 0x00	; 0
 3d8:	70 e0       	ldi	r23, 0x00	; 0
 3da:	80 e0       	ldi	r24, 0x00	; 0
 3dc:	90 e0       	ldi	r25, 0x00	; 0
 3de:	0e 94 70 00 	call	0xe0	; 0xe0 <LCD_Write_Number>
 3e2:	2f ef       	ldi	r18, 0xFF	; 255
 3e4:	89 ef       	ldi	r24, 0xF9	; 249
 3e6:	90 e0       	ldi	r25, 0x00	; 0
 3e8:	21 50       	subi	r18, 0x01	; 1
 3ea:	80 40       	sbci	r24, 0x00	; 0
 3ec:	90 40       	sbci	r25, 0x00	; 0
 3ee:	e1 f7       	brne	.-8      	; 0x3e8 <Main_Task+0x138>
 3f0:	00 c0       	rjmp	.+0      	; 0x3f2 <Main_Task+0x142>
 3f2:	00 00       	nop
	LCD_LINE_position(LCD_LINE3,12);
	LCD_Write_Number(D_Counter);
	return State_SUCCESS;
}
State_Error Main_Task(void){
	State_Error Local_Error=State_SUCCESS;
 3f4:	81 e0       	ldi	r24, 0x01	; 1
 3f6:	08 95       	ret
		D_Counter++;
		LCD_LINE_position(LCD_LINE3,12);
		LCD_Write_Number(D_Counter);		
		_delay_ms(20);
	}else{
		Local_Error=State_FAIL;
 3f8:	80 e0       	ldi	r24, 0x00	; 0
	}
	return Local_Error;
 3fa:	08 95       	ret

Disassembly of section .text.App_main:

00000c9e <App_main>:
	LCD_Initialize();
	return State_SUCCESS;
}
State_Error App_main(void){
	State_Error Local_Error=State_SUCCESS;
    LCD_FIRST_Page();
 c9e:	0e 94 6a 05 	call	0xad4	; 0xad4 <LCD_FIRST_Page>
    LCD_Seconed_Page();
 ca2:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <LCD_Seconed_Page>
	Main_Task();
 ca6:	0e 94 58 01 	call	0x2b0	; 0x2b0 <Main_Task>
	return Local_Error;
}
 caa:	81 e0       	ldi	r24, 0x01	; 1
 cac:	08 95       	ret

Disassembly of section .text.BTN_Initialization:

00000cae <BTN_Initialization>:
#include "button_Private.h"

bool BTN_OneTime = LOW;
ERROR_STATE BTN_Initialization(DIO_Port port, DIO_Pin pin){
	ERROR_STATE state_error = SUCCESS;
	DIO_SetPin_Direction(port , pin , DIO_INPUT);
 cae:	40 e0       	ldi	r20, 0x00	; 0
 cb0:	0e 94 fe 01 	call	0x3fc	; 0x3fc <DIO_SetPin_Direction>
	return state_error;
}
 cb4:	81 e0       	ldi	r24, 0x01	; 1
 cb6:	08 95       	ret

Disassembly of section .text.BTN_pressed:

00000906 <BTN_pressed>:
ERROR_STATE BTN_pressed(DIO_Port port, DIO_Pin pin, bool* btn_state){
 906:	ef 92       	push	r14
 908:	ff 92       	push	r15
 90a:	0f 93       	push	r16
 90c:	1f 93       	push	r17
 90e:	cf 93       	push	r28
 910:	df 93       	push	r29
 912:	0f 92       	push	r0
 914:	cd b7       	in	r28, 0x3d	; 61
 916:	de b7       	in	r29, 0x3e	; 62
 918:	18 2f       	mov	r17, r24
 91a:	06 2f       	mov	r16, r22
 91c:	7a 01       	movw	r14, r20
	ERROR_STATE state_error = SUCCESS;
	bool Btn_clicked;
	bool return_value = LOW;
	DIO_GetPin_Value(port, pin, &Btn_clicked);
 91e:	ae 01       	movw	r20, r28
 920:	4f 5f       	subi	r20, 0xFF	; 255
 922:	5f 4f       	sbci	r21, 0xFF	; 255
 924:	0e 94 ff 04 	call	0x9fe	; 0x9fe <DIO_GetPin_Value>
	return state_error;
}
ERROR_STATE BTN_pressed(DIO_Port port, DIO_Pin pin, bool* btn_state){
	ERROR_STATE state_error = SUCCESS;
	bool Btn_clicked;
	bool return_value = LOW;
 928:	80 e0       	ldi	r24, 0x00	; 0
	DIO_GetPin_Value(port, pin, &Btn_clicked);
	while((Btn_clicked) == LOW){
 92a:	08 c0       	rjmp	.+16     	; 0x93c <BTN_pressed+0x36>
		return_value =HIGH;
		DIO_GetPin_Value(port, pin, &Btn_clicked);
 92c:	ae 01       	movw	r20, r28
 92e:	4f 5f       	subi	r20, 0xFF	; 255
 930:	5f 4f       	sbci	r21, 0xFF	; 255
 932:	60 2f       	mov	r22, r16
 934:	81 2f       	mov	r24, r17
 936:	0e 94 ff 04 	call	0x9fe	; 0x9fe <DIO_GetPin_Value>
	ERROR_STATE state_error = SUCCESS;
	bool Btn_clicked;
	bool return_value = LOW;
	DIO_GetPin_Value(port, pin, &Btn_clicked);
	while((Btn_clicked) == LOW){
		return_value =HIGH;
 93a:	81 e0       	ldi	r24, 0x01	; 1
ERROR_STATE BTN_pressed(DIO_Port port, DIO_Pin pin, bool* btn_state){
	ERROR_STATE state_error = SUCCESS;
	bool Btn_clicked;
	bool return_value = LOW;
	DIO_GetPin_Value(port, pin, &Btn_clicked);
	while((Btn_clicked) == LOW){
 93c:	99 81       	ldd	r25, Y+1	; 0x01
 93e:	99 23       	and	r25, r25
 940:	a9 f3       	breq	.-22     	; 0x92c <BTN_pressed+0x26>
 942:	2f ef       	ldi	r18, 0xFF	; 255
 944:	36 e7       	ldi	r19, 0x76	; 118
 946:	91 e0       	ldi	r25, 0x01	; 1
 948:	21 50       	subi	r18, 0x01	; 1
 94a:	30 40       	sbci	r19, 0x00	; 0
 94c:	90 40       	sbci	r25, 0x00	; 0
 94e:	e1 f7       	brne	.-8      	; 0x948 <BTN_pressed+0x42>
 950:	00 c0       	rjmp	.+0      	; 0x952 <BTN_pressed+0x4c>
 952:	00 00       	nop
 954:	08 c0       	rjmp	.+16     	; 0x966 <BTN_pressed+0x60>
	}
	//return_value =LOW;
	_delay_ms(30);
	while((Btn_clicked) == LOW){
		return_value =HIGH;
		DIO_GetPin_Value(port, pin, &Btn_clicked);
 956:	ae 01       	movw	r20, r28
 958:	4f 5f       	subi	r20, 0xFF	; 255
 95a:	5f 4f       	sbci	r21, 0xFF	; 255
 95c:	60 2f       	mov	r22, r16
 95e:	81 2f       	mov	r24, r17
 960:	0e 94 ff 04 	call	0x9fe	; 0x9fe <DIO_GetPin_Value>
		DIO_GetPin_Value(port, pin, &Btn_clicked);
	}
	//return_value =LOW;
	_delay_ms(30);
	while((Btn_clicked) == LOW){
		return_value =HIGH;
 964:	81 e0       	ldi	r24, 0x01	; 1
		return_value =HIGH;
		DIO_GetPin_Value(port, pin, &Btn_clicked);
	}
	//return_value =LOW;
	_delay_ms(30);
	while((Btn_clicked) == LOW){
 966:	99 81       	ldd	r25, Y+1	; 0x01
 968:	99 23       	and	r25, r25
 96a:	a9 f3       	breq	.-22     	; 0x956 <BTN_pressed+0x50>
		return_value =HIGH;
		DIO_GetPin_Value(port, pin, &Btn_clicked);
	}
	*btn_state = return_value;
 96c:	f7 01       	movw	r30, r14
 96e:	80 83       	st	Z, r24
	return state_error;
 970:	81 e0       	ldi	r24, 0x01	; 1
 972:	0f 90       	pop	r0
 974:	df 91       	pop	r29
 976:	cf 91       	pop	r28
 978:	1f 91       	pop	r17
 97a:	0f 91       	pop	r16
 97c:	ff 90       	pop	r15
 97e:	ef 90       	pop	r14
 980:	08 95       	ret

Disassembly of section .text.LCD_Write_Command:

000005f8 <LCD_Write_Command>:
ERROR_STATE LCD_Curser_ON(void)
{
	ERROR_STATE state_error = SUCCESS;
	LCD_Write_Command(0x0F);
	return state_error;
}
 5f8:	cf 93       	push	r28
 5fa:	c8 2f       	mov	r28, r24
 5fc:	48 2f       	mov	r20, r24
 5fe:	44 1f       	adc	r20, r20
 600:	44 27       	eor	r20, r20
 602:	44 1f       	adc	r20, r20
 604:	64 e0       	ldi	r22, 0x04	; 4
 606:	81 e0       	ldi	r24, 0x01	; 1
 608:	0e 94 7d 02 	call	0x4fa	; 0x4fa <DIO_SetPin_Value>
 60c:	c6 fb       	bst	r28, 6
 60e:	44 27       	eor	r20, r20
 610:	40 f9       	bld	r20, 0
 612:	62 e0       	ldi	r22, 0x02	; 2
 614:	81 e0       	ldi	r24, 0x01	; 1
 616:	0e 94 7d 02 	call	0x4fa	; 0x4fa <DIO_SetPin_Value>
 61a:	c5 fb       	bst	r28, 5
 61c:	44 27       	eor	r20, r20
 61e:	40 f9       	bld	r20, 0
 620:	61 e0       	ldi	r22, 0x01	; 1
 622:	81 e0       	ldi	r24, 0x01	; 1
 624:	0e 94 7d 02 	call	0x4fa	; 0x4fa <DIO_SetPin_Value>
 628:	c4 fb       	bst	r28, 4
 62a:	44 27       	eor	r20, r20
 62c:	40 f9       	bld	r20, 0
 62e:	60 e0       	ldi	r22, 0x00	; 0
 630:	81 e0       	ldi	r24, 0x01	; 1
 632:	0e 94 7d 02 	call	0x4fa	; 0x4fa <DIO_SetPin_Value>
 636:	40 e0       	ldi	r20, 0x00	; 0
 638:	63 e0       	ldi	r22, 0x03	; 3
 63a:	80 e0       	ldi	r24, 0x00	; 0
 63c:	0e 94 7d 02 	call	0x4fa	; 0x4fa <DIO_SetPin_Value>
 640:	41 e0       	ldi	r20, 0x01	; 1
 642:	62 e0       	ldi	r22, 0x02	; 2
 644:	80 e0       	ldi	r24, 0x00	; 0
 646:	0e 94 7d 02 	call	0x4fa	; 0x4fa <DIO_SetPin_Value>
 64a:	85 e0       	ldi	r24, 0x05	; 5
 64c:	8a 95       	dec	r24
 64e:	f1 f7       	brne	.-4      	; 0x64c <LCD_Write_Command+0x54>
 650:	00 00       	nop
 652:	40 e0       	ldi	r20, 0x00	; 0
 654:	62 e0       	ldi	r22, 0x02	; 2
 656:	80 e0       	ldi	r24, 0x00	; 0
 658:	0e 94 7d 02 	call	0x4fa	; 0x4fa <DIO_SetPin_Value>
 65c:	8f e1       	ldi	r24, 0x1F	; 31
 65e:	93 e0       	ldi	r25, 0x03	; 3
 660:	01 97       	sbiw	r24, 0x01	; 1
 662:	f1 f7       	brne	.-4      	; 0x660 <LCD_Write_Command+0x68>
 664:	00 c0       	rjmp	.+0      	; 0x666 <LCD_Write_Command+0x6e>
 666:	00 00       	nop
 668:	c3 fb       	bst	r28, 3
 66a:	44 27       	eor	r20, r20
 66c:	40 f9       	bld	r20, 0
 66e:	64 e0       	ldi	r22, 0x04	; 4
 670:	81 e0       	ldi	r24, 0x01	; 1
 672:	0e 94 7d 02 	call	0x4fa	; 0x4fa <DIO_SetPin_Value>
 676:	c2 fb       	bst	r28, 2
 678:	44 27       	eor	r20, r20
 67a:	40 f9       	bld	r20, 0
 67c:	62 e0       	ldi	r22, 0x02	; 2
 67e:	81 e0       	ldi	r24, 0x01	; 1
 680:	0e 94 7d 02 	call	0x4fa	; 0x4fa <DIO_SetPin_Value>
 684:	c1 fb       	bst	r28, 1
 686:	44 27       	eor	r20, r20
 688:	40 f9       	bld	r20, 0
 68a:	61 e0       	ldi	r22, 0x01	; 1
 68c:	81 e0       	ldi	r24, 0x01	; 1
 68e:	0e 94 7d 02 	call	0x4fa	; 0x4fa <DIO_SetPin_Value>
 692:	4c 2f       	mov	r20, r28
 694:	41 70       	andi	r20, 0x01	; 1
 696:	60 e0       	ldi	r22, 0x00	; 0
 698:	81 e0       	ldi	r24, 0x01	; 1
 69a:	0e 94 7d 02 	call	0x4fa	; 0x4fa <DIO_SetPin_Value>
 69e:	41 e0       	ldi	r20, 0x01	; 1
 6a0:	62 e0       	ldi	r22, 0x02	; 2
 6a2:	80 e0       	ldi	r24, 0x00	; 0
 6a4:	0e 94 7d 02 	call	0x4fa	; 0x4fa <DIO_SetPin_Value>
 6a8:	95 e0       	ldi	r25, 0x05	; 5
 6aa:	9a 95       	dec	r25
 6ac:	f1 f7       	brne	.-4      	; 0x6aa <LCD_Write_Command+0xb2>
 6ae:	00 00       	nop
 6b0:	40 e0       	ldi	r20, 0x00	; 0
 6b2:	62 e0       	ldi	r22, 0x02	; 2
 6b4:	80 e0       	ldi	r24, 0x00	; 0
 6b6:	0e 94 7d 02 	call	0x4fa	; 0x4fa <DIO_SetPin_Value>
 6ba:	8f e3       	ldi	r24, 0x3F	; 63
 6bc:	9f e1       	ldi	r25, 0x1F	; 31
 6be:	01 97       	sbiw	r24, 0x01	; 1
 6c0:	f1 f7       	brne	.-4      	; 0x6be <LCD_Write_Command+0xc6>
 6c2:	00 c0       	rjmp	.+0      	; 0x6c4 <LCD_Write_Command+0xcc>
 6c4:	00 00       	nop
 6c6:	81 e0       	ldi	r24, 0x01	; 1
 6c8:	cf 91       	pop	r28
 6ca:	08 95       	ret

Disassembly of section .text.LCD_Initialize:

00000982 <LCD_Initialize>:
 982:	41 e0       	ldi	r20, 0x01	; 1
 984:	60 e0       	ldi	r22, 0x00	; 0
 986:	81 e0       	ldi	r24, 0x01	; 1
 988:	0e 94 fe 01 	call	0x3fc	; 0x3fc <DIO_SetPin_Direction>
 98c:	41 e0       	ldi	r20, 0x01	; 1
 98e:	61 e0       	ldi	r22, 0x01	; 1
 990:	81 e0       	ldi	r24, 0x01	; 1
 992:	0e 94 fe 01 	call	0x3fc	; 0x3fc <DIO_SetPin_Direction>
 996:	41 e0       	ldi	r20, 0x01	; 1
 998:	62 e0       	ldi	r22, 0x02	; 2
 99a:	81 e0       	ldi	r24, 0x01	; 1
 99c:	0e 94 fe 01 	call	0x3fc	; 0x3fc <DIO_SetPin_Direction>
 9a0:	41 e0       	ldi	r20, 0x01	; 1
 9a2:	64 e0       	ldi	r22, 0x04	; 4
 9a4:	81 e0       	ldi	r24, 0x01	; 1
 9a6:	0e 94 fe 01 	call	0x3fc	; 0x3fc <DIO_SetPin_Direction>
 9aa:	41 e0       	ldi	r20, 0x01	; 1
 9ac:	63 e0       	ldi	r22, 0x03	; 3
 9ae:	80 e0       	ldi	r24, 0x00	; 0
 9b0:	0e 94 fe 01 	call	0x3fc	; 0x3fc <DIO_SetPin_Direction>
 9b4:	41 e0       	ldi	r20, 0x01	; 1
 9b6:	62 e0       	ldi	r22, 0x02	; 2
 9b8:	80 e0       	ldi	r24, 0x00	; 0
 9ba:	0e 94 fe 01 	call	0x3fc	; 0x3fc <DIO_SetPin_Direction>
 9be:	2f ef       	ldi	r18, 0xFF	; 255
 9c0:	89 ef       	ldi	r24, 0xF9	; 249
 9c2:	90 e0       	ldi	r25, 0x00	; 0
 9c4:	21 50       	subi	r18, 0x01	; 1
 9c6:	80 40       	sbci	r24, 0x00	; 0
 9c8:	90 40       	sbci	r25, 0x00	; 0
 9ca:	e1 f7       	brne	.-8      	; 0x9c4 <LCD_Initialize+0x42>
 9cc:	00 c0       	rjmp	.+0      	; 0x9ce <LCD_Initialize+0x4c>
 9ce:	00 00       	nop
 9d0:	83 e3       	ldi	r24, 0x33	; 51
 9d2:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <LCD_Write_Command>
 9d6:	82 e3       	ldi	r24, 0x32	; 50
 9d8:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <LCD_Write_Command>
 9dc:	88 e2       	ldi	r24, 0x28	; 40
 9de:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <LCD_Write_Command>
 9e2:	81 e0       	ldi	r24, 0x01	; 1
 9e4:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <LCD_Write_Command>
 9e8:	8f e0       	ldi	r24, 0x0F	; 15
 9ea:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <LCD_Write_Command>
 9ee:	8f e3       	ldi	r24, 0x3F	; 63
 9f0:	9c e9       	ldi	r25, 0x9C	; 156
 9f2:	01 97       	sbiw	r24, 0x01	; 1
 9f4:	f1 f7       	brne	.-4      	; 0x9f2 <LCD_Initialize+0x70>
 9f6:	00 c0       	rjmp	.+0      	; 0x9f8 <LCD_Initialize+0x76>
 9f8:	00 00       	nop
 9fa:	81 e0       	ldi	r24, 0x01	; 1
 9fc:	08 95       	ret

Disassembly of section .text.LCD_Clear:

00000cb8 <LCD_Clear>:

ERROR_STATE LCD_Clear(void)
{
	ERROR_STATE state_error = SUCCESS;
	LCD_Write_Command(0x01);
 cb8:	81 e0       	ldi	r24, 0x01	; 1
 cba:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <LCD_Write_Command>
	return state_error;
}
 cbe:	81 e0       	ldi	r24, 0x01	; 1
 cc0:	08 95       	ret

Disassembly of section .text.LCD_Write_Character:

000006cc <LCD_Write_Character>:
ERROR_STATE LCD_Curser_ON(void)
{
	ERROR_STATE state_error = SUCCESS;
	LCD_Write_Command(0x0F);
	return state_error;
}
 6cc:	cf 93       	push	r28
 6ce:	c8 2f       	mov	r28, r24
 6d0:	48 2f       	mov	r20, r24
 6d2:	44 1f       	adc	r20, r20
 6d4:	44 27       	eor	r20, r20
 6d6:	44 1f       	adc	r20, r20
 6d8:	64 e0       	ldi	r22, 0x04	; 4
 6da:	81 e0       	ldi	r24, 0x01	; 1
 6dc:	0e 94 7d 02 	call	0x4fa	; 0x4fa <DIO_SetPin_Value>
 6e0:	c6 fb       	bst	r28, 6
 6e2:	44 27       	eor	r20, r20
 6e4:	40 f9       	bld	r20, 0
 6e6:	62 e0       	ldi	r22, 0x02	; 2
 6e8:	81 e0       	ldi	r24, 0x01	; 1
 6ea:	0e 94 7d 02 	call	0x4fa	; 0x4fa <DIO_SetPin_Value>
 6ee:	c5 fb       	bst	r28, 5
 6f0:	44 27       	eor	r20, r20
 6f2:	40 f9       	bld	r20, 0
 6f4:	61 e0       	ldi	r22, 0x01	; 1
 6f6:	81 e0       	ldi	r24, 0x01	; 1
 6f8:	0e 94 7d 02 	call	0x4fa	; 0x4fa <DIO_SetPin_Value>
 6fc:	c4 fb       	bst	r28, 4
 6fe:	44 27       	eor	r20, r20
 700:	40 f9       	bld	r20, 0
 702:	60 e0       	ldi	r22, 0x00	; 0
 704:	81 e0       	ldi	r24, 0x01	; 1
 706:	0e 94 7d 02 	call	0x4fa	; 0x4fa <DIO_SetPin_Value>
 70a:	41 e0       	ldi	r20, 0x01	; 1
 70c:	63 e0       	ldi	r22, 0x03	; 3
 70e:	80 e0       	ldi	r24, 0x00	; 0
 710:	0e 94 7d 02 	call	0x4fa	; 0x4fa <DIO_SetPin_Value>
 714:	41 e0       	ldi	r20, 0x01	; 1
 716:	62 e0       	ldi	r22, 0x02	; 2
 718:	80 e0       	ldi	r24, 0x00	; 0
 71a:	0e 94 7d 02 	call	0x4fa	; 0x4fa <DIO_SetPin_Value>
 71e:	85 e0       	ldi	r24, 0x05	; 5
 720:	8a 95       	dec	r24
 722:	f1 f7       	brne	.-4      	; 0x720 <LCD_Write_Character+0x54>
 724:	00 00       	nop
 726:	40 e0       	ldi	r20, 0x00	; 0
 728:	62 e0       	ldi	r22, 0x02	; 2
 72a:	80 e0       	ldi	r24, 0x00	; 0
 72c:	0e 94 7d 02 	call	0x4fa	; 0x4fa <DIO_SetPin_Value>
 730:	8f e1       	ldi	r24, 0x1F	; 31
 732:	93 e0       	ldi	r25, 0x03	; 3
 734:	01 97       	sbiw	r24, 0x01	; 1
 736:	f1 f7       	brne	.-4      	; 0x734 <LCD_Write_Character+0x68>
 738:	00 c0       	rjmp	.+0      	; 0x73a <LCD_Write_Character+0x6e>
 73a:	00 00       	nop
 73c:	c3 fb       	bst	r28, 3
 73e:	44 27       	eor	r20, r20
 740:	40 f9       	bld	r20, 0
 742:	64 e0       	ldi	r22, 0x04	; 4
 744:	81 e0       	ldi	r24, 0x01	; 1
 746:	0e 94 7d 02 	call	0x4fa	; 0x4fa <DIO_SetPin_Value>
 74a:	c2 fb       	bst	r28, 2
 74c:	44 27       	eor	r20, r20
 74e:	40 f9       	bld	r20, 0
 750:	62 e0       	ldi	r22, 0x02	; 2
 752:	81 e0       	ldi	r24, 0x01	; 1
 754:	0e 94 7d 02 	call	0x4fa	; 0x4fa <DIO_SetPin_Value>
 758:	c1 fb       	bst	r28, 1
 75a:	44 27       	eor	r20, r20
 75c:	40 f9       	bld	r20, 0
 75e:	61 e0       	ldi	r22, 0x01	; 1
 760:	81 e0       	ldi	r24, 0x01	; 1
 762:	0e 94 7d 02 	call	0x4fa	; 0x4fa <DIO_SetPin_Value>
 766:	4c 2f       	mov	r20, r28
 768:	41 70       	andi	r20, 0x01	; 1
 76a:	60 e0       	ldi	r22, 0x00	; 0
 76c:	81 e0       	ldi	r24, 0x01	; 1
 76e:	0e 94 7d 02 	call	0x4fa	; 0x4fa <DIO_SetPin_Value>
 772:	41 e0       	ldi	r20, 0x01	; 1
 774:	62 e0       	ldi	r22, 0x02	; 2
 776:	80 e0       	ldi	r24, 0x00	; 0
 778:	0e 94 7d 02 	call	0x4fa	; 0x4fa <DIO_SetPin_Value>
 77c:	95 e0       	ldi	r25, 0x05	; 5
 77e:	9a 95       	dec	r25
 780:	f1 f7       	brne	.-4      	; 0x77e <LCD_Write_Character+0xb2>
 782:	00 00       	nop
 784:	40 e0       	ldi	r20, 0x00	; 0
 786:	62 e0       	ldi	r22, 0x02	; 2
 788:	80 e0       	ldi	r24, 0x00	; 0
 78a:	0e 94 7d 02 	call	0x4fa	; 0x4fa <DIO_SetPin_Value>
 78e:	8f e3       	ldi	r24, 0x3F	; 63
 790:	9f e1       	ldi	r25, 0x1F	; 31
 792:	01 97       	sbiw	r24, 0x01	; 1
 794:	f1 f7       	brne	.-4      	; 0x792 <LCD_Write_Character+0xc6>
 796:	00 c0       	rjmp	.+0      	; 0x798 <LCD_Write_Character+0xcc>
 798:	00 00       	nop
 79a:	81 e0       	ldi	r24, 0x01	; 1
 79c:	cf 91       	pop	r28
 79e:	08 95       	ret

Disassembly of section .text.LCD_Write_String:

00000bda <LCD_Write_String>:
 bda:	cf 92       	push	r12
 bdc:	df 92       	push	r13
 bde:	ef 92       	push	r14
 be0:	6b 01       	movw	r12, r22
 be2:	e8 2e       	mov	r14, r24
 be4:	06 c0       	rjmp	.+12     	; 0xbf2 <LCD_Write_String+0x18>
 be6:	0e 94 66 03 	call	0x6cc	; 0x6cc <LCD_Write_Character>
 bea:	8f ef       	ldi	r24, 0xFF	; 255
 bec:	c8 1a       	sub	r12, r24
 bee:	d8 0a       	sbc	r13, r24
 bf0:	e8 0a       	sbc	r14, r24
 bf2:	f6 01       	movw	r30, r12
 bf4:	84 91       	lpm	r24, Z
 bf6:	e7 fc       	sbrc	r14, 7
 bf8:	80 81       	ld	r24, Z
 bfa:	81 11       	cpse	r24, r1
 bfc:	f4 cf       	rjmp	.-24     	; 0xbe6 <LCD_Write_String+0xc>
 bfe:	81 e0       	ldi	r24, 0x01	; 1
 c00:	ef 90       	pop	r14
 c02:	df 90       	pop	r13
 c04:	cf 90       	pop	r12
 c06:	08 95       	ret

Disassembly of section .text.LCD_Write_Number:

000000e0 <LCD_Write_Number>:
  e0:	2f 92       	push	r2
  e2:	3f 92       	push	r3
  e4:	4f 92       	push	r4
  e6:	5f 92       	push	r5
  e8:	6f 92       	push	r6
  ea:	7f 92       	push	r7
  ec:	8f 92       	push	r8
  ee:	9f 92       	push	r9
  f0:	af 92       	push	r10
  f2:	bf 92       	push	r11
  f4:	cf 92       	push	r12
  f6:	df 92       	push	r13
  f8:	ef 92       	push	r14
  fa:	ff 92       	push	r15
  fc:	0f 93       	push	r16
  fe:	1f 93       	push	r17
 100:	cf 93       	push	r28
 102:	df 93       	push	r29
 104:	cd b7       	in	r28, 0x3d	; 61
 106:	de b7       	in	r29, 0x3e	; 62
 108:	6b 97       	sbiw	r28, 0x1b	; 27
 10a:	0f b6       	in	r0, 0x3f	; 63
 10c:	f8 94       	cli
 10e:	de bf       	out	0x3e, r29	; 62
 110:	0f be       	out	0x3f, r0	; 63
 112:	cd bf       	out	0x3d, r28	; 61
 114:	2d 8b       	std	Y+21, r18	; 0x15
 116:	3e 8b       	std	Y+22, r19	; 0x16
 118:	94 2e       	mov	r9, r20
 11a:	85 2e       	mov	r8, r21
 11c:	6f 8b       	std	Y+23, r22	; 0x17
 11e:	78 8f       	std	Y+24, r23	; 0x18
 120:	38 2e       	mov	r3, r24
 122:	29 2e       	mov	r2, r25
 124:	a0 e0       	ldi	r26, 0x00	; 0
 126:	0e 94 38 06 	call	0xc70	; 0xc70 <__cmpdi2_s8>
 12a:	ac f4       	brge	.+42     	; 0x156 <LCD_Write_Number+0x76>
 12c:	8d e2       	ldi	r24, 0x2D	; 45
 12e:	0e 94 66 03 	call	0x6cc	; 0x6cc <LCD_Write_Character>
 132:	2d 89       	ldd	r18, Y+21	; 0x15
 134:	3e 89       	ldd	r19, Y+22	; 0x16
 136:	49 2d       	mov	r20, r9
 138:	58 2d       	mov	r21, r8
 13a:	6f 89       	ldd	r22, Y+23	; 0x17
 13c:	78 8d       	ldd	r23, Y+24	; 0x18
 13e:	83 2d       	mov	r24, r3
 140:	92 2d       	mov	r25, r2
 142:	0e 94 1a 06 	call	0xc34	; 0xc34 <__negdi2>
 146:	2d 8b       	std	Y+21, r18	; 0x15
 148:	3e 8b       	std	Y+22, r19	; 0x16
 14a:	94 2e       	mov	r9, r20
 14c:	85 2e       	mov	r8, r21
 14e:	6f 8b       	std	Y+23, r22	; 0x17
 150:	78 8f       	std	Y+24, r23	; 0x18
 152:	38 2e       	mov	r3, r24
 154:	29 2e       	mov	r2, r25
 156:	ed 89       	ldd	r30, Y+21	; 0x15
 158:	5e 88       	ldd	r5, Y+22	; 0x16
 15a:	49 2c       	mov	r4, r9
 15c:	89 8e       	std	Y+25, r8	; 0x19
 15e:	8f 89       	ldd	r24, Y+23	; 0x17
 160:	8a 8f       	std	Y+26, r24	; 0x1a
 162:	88 8d       	ldd	r24, Y+24	; 0x18
 164:	8b 8f       	std	Y+27, r24	; 0x1b
 166:	b3 2d       	mov	r27, r3
 168:	f2 2d       	mov	r31, r2
 16a:	61 2c       	mov	r6, r1
 16c:	71 2c       	mov	r7, r1
 16e:	20 c0       	rjmp	.+64     	; 0x1b0 <LCD_Write_Number+0xd0>
 170:	8f ef       	ldi	r24, 0xFF	; 255
 172:	68 1a       	sub	r6, r24
 174:	78 0a       	sbc	r7, r24
 176:	0f 2e       	mov	r0, r31
 178:	fa e0       	ldi	r31, 0x0A	; 10
 17a:	af 2e       	mov	r10, r31
 17c:	f0 2d       	mov	r31, r0
 17e:	b1 2c       	mov	r11, r1
 180:	c1 2c       	mov	r12, r1
 182:	d1 2c       	mov	r13, r1
 184:	e1 2c       	mov	r14, r1
 186:	f1 2c       	mov	r15, r1
 188:	00 e0       	ldi	r16, 0x00	; 0
 18a:	10 e0       	ldi	r17, 0x00	; 0
 18c:	2e 2f       	mov	r18, r30
 18e:	35 2d       	mov	r19, r5
 190:	44 2d       	mov	r20, r4
 192:	59 8d       	ldd	r21, Y+25	; 0x19
 194:	6a 8d       	ldd	r22, Y+26	; 0x1a
 196:	7b 8d       	ldd	r23, Y+27	; 0x1b
 198:	8b 2f       	mov	r24, r27
 19a:	9f 2f       	mov	r25, r31
 19c:	0e 94 3b 05 	call	0xa76	; 0xa76 <__divdi3>
 1a0:	e2 2f       	mov	r30, r18
 1a2:	53 2e       	mov	r5, r19
 1a4:	44 2e       	mov	r4, r20
 1a6:	59 8f       	std	Y+25, r21	; 0x19
 1a8:	6a 8f       	std	Y+26, r22	; 0x1a
 1aa:	7b 8f       	std	Y+27, r23	; 0x1b
 1ac:	b8 2f       	mov	r27, r24
 1ae:	f9 2f       	mov	r31, r25
 1b0:	2e 2f       	mov	r18, r30
 1b2:	35 2d       	mov	r19, r5
 1b4:	44 2d       	mov	r20, r4
 1b6:	59 8d       	ldd	r21, Y+25	; 0x19
 1b8:	6a 8d       	ldd	r22, Y+26	; 0x1a
 1ba:	7b 8d       	ldd	r23, Y+27	; 0x1b
 1bc:	8b 2f       	mov	r24, r27
 1be:	9f 2f       	mov	r25, r31
 1c0:	a0 e0       	ldi	r26, 0x00	; 0
 1c2:	0e 94 38 06 	call	0xc70	; 0xc70 <__cmpdi2_s8>
 1c6:	a1 f6       	brne	.-88     	; 0x170 <LCD_Write_Number+0x90>
 1c8:	2d 89       	ldd	r18, Y+21	; 0x15
 1ca:	3e 89       	ldd	r19, Y+22	; 0x16
 1cc:	49 2d       	mov	r20, r9
 1ce:	58 2d       	mov	r21, r8
 1d0:	6f 89       	ldd	r22, Y+23	; 0x17
 1d2:	78 8d       	ldd	r23, Y+24	; 0x18
 1d4:	83 2d       	mov	r24, r3
 1d6:	92 2d       	mov	r25, r2
 1d8:	0e 94 38 06 	call	0xc70	; 0xc70 <__cmpdi2_s8>
 1dc:	21 f4       	brne	.+8      	; 0x1e6 <LCD_Write_Number+0x106>
 1de:	80 e3       	ldi	r24, 0x30	; 48
 1e0:	0e 94 66 03 	call	0x6cc	; 0x6cc <LCD_Write_Character>
 1e4:	4b c0       	rjmp	.+150    	; 0x27c <LCD_Write_Number+0x19c>
 1e6:	23 01       	movw	r4, r6
 1e8:	81 e0       	ldi	r24, 0x01	; 1
 1ea:	48 1a       	sub	r4, r24
 1ec:	51 08       	sbc	r5, r1
 1ee:	32 c0       	rjmp	.+100    	; 0x254 <LCD_Write_Number+0x174>
 1f0:	0f 2e       	mov	r0, r31
 1f2:	fa e0       	ldi	r31, 0x0A	; 10
 1f4:	af 2e       	mov	r10, r31
 1f6:	f0 2d       	mov	r31, r0
 1f8:	b1 2c       	mov	r11, r1
 1fa:	c1 2c       	mov	r12, r1
 1fc:	d1 2c       	mov	r13, r1
 1fe:	e1 2c       	mov	r14, r1
 200:	f1 2c       	mov	r15, r1
 202:	00 e0       	ldi	r16, 0x00	; 0
 204:	10 e0       	ldi	r17, 0x00	; 0
 206:	2d 89       	ldd	r18, Y+21	; 0x15
 208:	3e 89       	ldd	r19, Y+22	; 0x16
 20a:	49 2d       	mov	r20, r9
 20c:	58 2d       	mov	r21, r8
 20e:	6f 89       	ldd	r22, Y+23	; 0x17
 210:	78 8d       	ldd	r23, Y+24	; 0x18
 212:	83 2d       	mov	r24, r3
 214:	92 2d       	mov	r25, r2
 216:	0e 94 39 05 	call	0xa72	; 0xa72 <__moddi3>
 21a:	e1 e0       	ldi	r30, 0x01	; 1
 21c:	f0 e0       	ldi	r31, 0x00	; 0
 21e:	ec 0f       	add	r30, r28
 220:	fd 1f       	adc	r31, r29
 222:	e4 0d       	add	r30, r4
 224:	f5 1d       	adc	r31, r5
 226:	20 5d       	subi	r18, 0xD0	; 208
 228:	20 83       	st	Z, r18
 22a:	2d 89       	ldd	r18, Y+21	; 0x15
 22c:	3e 89       	ldd	r19, Y+22	; 0x16
 22e:	49 2d       	mov	r20, r9
 230:	58 2d       	mov	r21, r8
 232:	6f 89       	ldd	r22, Y+23	; 0x17
 234:	78 8d       	ldd	r23, Y+24	; 0x18
 236:	83 2d       	mov	r24, r3
 238:	92 2d       	mov	r25, r2
 23a:	0e 94 3b 05 	call	0xa76	; 0xa76 <__divdi3>
 23e:	2d 8b       	std	Y+21, r18	; 0x15
 240:	3e 8b       	std	Y+22, r19	; 0x16
 242:	94 2e       	mov	r9, r20
 244:	85 2e       	mov	r8, r21
 246:	6f 8b       	std	Y+23, r22	; 0x17
 248:	78 8f       	std	Y+24, r23	; 0x18
 24a:	38 2e       	mov	r3, r24
 24c:	29 2e       	mov	r2, r25
 24e:	81 e0       	ldi	r24, 0x01	; 1
 250:	48 1a       	sub	r4, r24
 252:	51 08       	sbc	r5, r1
 254:	55 20       	and	r5, r5
 256:	64 f6       	brge	.-104    	; 0x1f0 <LCD_Write_Number+0x110>
 258:	81 2c       	mov	r8, r1
 25a:	91 2c       	mov	r9, r1
 25c:	0c c0       	rjmp	.+24     	; 0x276 <LCD_Write_Number+0x196>
 25e:	e1 e0       	ldi	r30, 0x01	; 1
 260:	f0 e0       	ldi	r31, 0x00	; 0
 262:	ec 0f       	add	r30, r28
 264:	fd 1f       	adc	r31, r29
 266:	e8 0d       	add	r30, r8
 268:	f9 1d       	adc	r31, r9
 26a:	80 81       	ld	r24, Z
 26c:	0e 94 66 03 	call	0x6cc	; 0x6cc <LCD_Write_Character>
 270:	8f ef       	ldi	r24, 0xFF	; 255
 272:	88 1a       	sub	r8, r24
 274:	98 0a       	sbc	r9, r24
 276:	86 14       	cp	r8, r6
 278:	97 04       	cpc	r9, r7
 27a:	88 f3       	brcs	.-30     	; 0x25e <LCD_Write_Number+0x17e>
 27c:	81 e0       	ldi	r24, 0x01	; 1
 27e:	6b 96       	adiw	r28, 0x1b	; 27
 280:	0f b6       	in	r0, 0x3f	; 63
 282:	f8 94       	cli
 284:	de bf       	out	0x3e, r29	; 62
 286:	0f be       	out	0x3f, r0	; 63
 288:	cd bf       	out	0x3d, r28	; 61
 28a:	df 91       	pop	r29
 28c:	cf 91       	pop	r28
 28e:	1f 91       	pop	r17
 290:	0f 91       	pop	r16
 292:	ff 90       	pop	r15
 294:	ef 90       	pop	r14
 296:	df 90       	pop	r13
 298:	cf 90       	pop	r12
 29a:	bf 90       	pop	r11
 29c:	af 90       	pop	r10
 29e:	9f 90       	pop	r9
 2a0:	8f 90       	pop	r8
 2a2:	7f 90       	pop	r7
 2a4:	6f 90       	pop	r6
 2a6:	5f 90       	pop	r5
 2a8:	4f 90       	pop	r4
 2aa:	3f 90       	pop	r3
 2ac:	2f 90       	pop	r2
 2ae:	08 95       	ret

Disassembly of section .text.LCD_LINE_position:

00000b24 <LCD_LINE_position>:
 b24:	cf 93       	push	r28
 b26:	64 31       	cpi	r22, 0x14	; 20
 b28:	e8 f4       	brcc	.+58     	; 0xb64 <LCD_LINE_position+0x40>
 b2a:	81 30       	cpi	r24, 0x01	; 1
 b2c:	91 f0       	breq	.+36     	; 0xb52 <LCD_LINE_position+0x2e>
 b2e:	28 f0       	brcs	.+10     	; 0xb3a <LCD_LINE_position+0x16>
 b30:	82 30       	cpi	r24, 0x02	; 2
 b32:	31 f0       	breq	.+12     	; 0xb40 <LCD_LINE_position+0x1c>
 b34:	83 30       	cpi	r24, 0x03	; 3
 b36:	39 f0       	breq	.+14     	; 0xb46 <LCD_LINE_position+0x22>
 b38:	09 c0       	rjmp	.+18     	; 0xb4c <LCD_LINE_position+0x28>
 b3a:	80 e0       	ldi	r24, 0x00	; 0
 b3c:	c1 e0       	ldi	r28, 0x01	; 1
 b3e:	0b c0       	rjmp	.+22     	; 0xb56 <LCD_LINE_position+0x32>
 b40:	84 e1       	ldi	r24, 0x14	; 20
 b42:	c1 e0       	ldi	r28, 0x01	; 1
 b44:	08 c0       	rjmp	.+16     	; 0xb56 <LCD_LINE_position+0x32>
 b46:	84 e5       	ldi	r24, 0x54	; 84
 b48:	c1 e0       	ldi	r28, 0x01	; 1
 b4a:	05 c0       	rjmp	.+10     	; 0xb56 <LCD_LINE_position+0x32>
 b4c:	80 e0       	ldi	r24, 0x00	; 0
 b4e:	c0 e0       	ldi	r28, 0x00	; 0
 b50:	02 c0       	rjmp	.+4      	; 0xb56 <LCD_LINE_position+0x32>
 b52:	80 e4       	ldi	r24, 0x40	; 64
 b54:	c1 e0       	ldi	r28, 0x01	; 1
 b56:	c1 30       	cpi	r28, 0x01	; 1
 b58:	31 f4       	brne	.+12     	; 0xb66 <LCD_LINE_position+0x42>
 b5a:	86 0f       	add	r24, r22
 b5c:	80 58       	subi	r24, 0x80	; 128
 b5e:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <LCD_Write_Command>
 b62:	01 c0       	rjmp	.+2      	; 0xb66 <LCD_LINE_position+0x42>
 b64:	c0 e0       	ldi	r28, 0x00	; 0
 b66:	8c 2f       	mov	r24, r28
 b68:	cf 91       	pop	r28
 b6a:	08 95       	ret

Disassembly of section .text.main:

00000cc2 <main>:

#include "main.h"


int main() {
App_Init();
 cc2:	0e 94 04 06 	call	0xc08	; 0xc08 <App_Init>
while(1){
App_main();
 cc6:	0e 94 4f 06 	call	0xc9e	; 0xc9e <App_main>
 cca:	fd cf       	rjmp	.-6      	; 0xcc6 <main+0x4>

Disassembly of section .text.DIO_SetPin_Direction:

000003fc <DIO_SetPin_Direction>:
		default:
		state_error = FAIL;
		break;
	}
	return state_error;
}
 3fc:	44 23       	and	r20, r20
 3fe:	19 f0       	breq	.+6      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 400:	41 30       	cpi	r20, 0x01	; 1
 402:	e9 f1       	breq	.+122    	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
 404:	74 c0       	rjmp	.+232    	; 0x4ee <__EEPROM_REGION_LENGTH__+0xee>
 406:	81 30       	cpi	r24, 0x01	; 1
 408:	99 f0       	breq	.+38     	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
 40a:	28 f0       	brcs	.+10     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 40c:	82 30       	cpi	r24, 0x02	; 2
 40e:	e9 f0       	breq	.+58     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 410:	83 30       	cpi	r24, 0x03	; 3
 412:	41 f1       	breq	.+80     	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
 414:	6e c0       	rjmp	.+220    	; 0x4f2 <__EEPROM_REGION_LENGTH__+0xf2>
 416:	2a b3       	in	r18, 0x1a	; 26
 418:	81 e0       	ldi	r24, 0x01	; 1
 41a:	90 e0       	ldi	r25, 0x00	; 0
 41c:	02 c0       	rjmp	.+4      	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 41e:	88 0f       	add	r24, r24
 420:	99 1f       	adc	r25, r25
 422:	6a 95       	dec	r22
 424:	e2 f7       	brpl	.-8      	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 426:	80 95       	com	r24
 428:	82 23       	and	r24, r18
 42a:	8a bb       	out	0x1a, r24	; 26
 42c:	81 e0       	ldi	r24, 0x01	; 1
 42e:	08 95       	ret
 430:	27 b3       	in	r18, 0x17	; 23
 432:	81 e0       	ldi	r24, 0x01	; 1
 434:	90 e0       	ldi	r25, 0x00	; 0
 436:	02 c0       	rjmp	.+4      	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
 438:	88 0f       	add	r24, r24
 43a:	99 1f       	adc	r25, r25
 43c:	6a 95       	dec	r22
 43e:	e2 f7       	brpl	.-8      	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 440:	80 95       	com	r24
 442:	82 23       	and	r24, r18
 444:	87 bb       	out	0x17, r24	; 23
 446:	81 e0       	ldi	r24, 0x01	; 1
 448:	08 95       	ret
 44a:	24 b3       	in	r18, 0x14	; 20
 44c:	81 e0       	ldi	r24, 0x01	; 1
 44e:	90 e0       	ldi	r25, 0x00	; 0
 450:	02 c0       	rjmp	.+4      	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
 452:	88 0f       	add	r24, r24
 454:	99 1f       	adc	r25, r25
 456:	6a 95       	dec	r22
 458:	e2 f7       	brpl	.-8      	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 45a:	80 95       	com	r24
 45c:	82 23       	and	r24, r18
 45e:	84 bb       	out	0x14, r24	; 20
 460:	81 e0       	ldi	r24, 0x01	; 1
 462:	08 95       	ret
 464:	21 b3       	in	r18, 0x11	; 17
 466:	81 e0       	ldi	r24, 0x01	; 1
 468:	90 e0       	ldi	r25, 0x00	; 0
 46a:	02 c0       	rjmp	.+4      	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
 46c:	88 0f       	add	r24, r24
 46e:	99 1f       	adc	r25, r25
 470:	6a 95       	dec	r22
 472:	e2 f7       	brpl	.-8      	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
 474:	80 95       	com	r24
 476:	82 23       	and	r24, r18
 478:	81 bb       	out	0x11, r24	; 17
 47a:	81 e0       	ldi	r24, 0x01	; 1
 47c:	08 95       	ret
 47e:	81 30       	cpi	r24, 0x01	; 1
 480:	91 f0       	breq	.+36     	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
 482:	28 f0       	brcs	.+10     	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
 484:	82 30       	cpi	r24, 0x02	; 2
 486:	d9 f0       	breq	.+54     	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 488:	83 30       	cpi	r24, 0x03	; 3
 48a:	29 f1       	breq	.+74     	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
 48c:	34 c0       	rjmp	.+104    	; 0x4f6 <__EEPROM_REGION_LENGTH__+0xf6>
 48e:	2a b3       	in	r18, 0x1a	; 26
 490:	81 e0       	ldi	r24, 0x01	; 1
 492:	90 e0       	ldi	r25, 0x00	; 0
 494:	02 c0       	rjmp	.+4      	; 0x49a <__EEPROM_REGION_LENGTH__+0x9a>
 496:	88 0f       	add	r24, r24
 498:	99 1f       	adc	r25, r25
 49a:	6a 95       	dec	r22
 49c:	e2 f7       	brpl	.-8      	; 0x496 <__EEPROM_REGION_LENGTH__+0x96>
 49e:	82 2b       	or	r24, r18
 4a0:	8a bb       	out	0x1a, r24	; 26
 4a2:	81 e0       	ldi	r24, 0x01	; 1
 4a4:	08 95       	ret
 4a6:	27 b3       	in	r18, 0x17	; 23
 4a8:	81 e0       	ldi	r24, 0x01	; 1
 4aa:	90 e0       	ldi	r25, 0x00	; 0
 4ac:	02 c0       	rjmp	.+4      	; 0x4b2 <__EEPROM_REGION_LENGTH__+0xb2>
 4ae:	88 0f       	add	r24, r24
 4b0:	99 1f       	adc	r25, r25
 4b2:	6a 95       	dec	r22
 4b4:	e2 f7       	brpl	.-8      	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 4b6:	82 2b       	or	r24, r18
 4b8:	87 bb       	out	0x17, r24	; 23
 4ba:	81 e0       	ldi	r24, 0x01	; 1
 4bc:	08 95       	ret
 4be:	24 b3       	in	r18, 0x14	; 20
 4c0:	81 e0       	ldi	r24, 0x01	; 1
 4c2:	90 e0       	ldi	r25, 0x00	; 0
 4c4:	02 c0       	rjmp	.+4      	; 0x4ca <__EEPROM_REGION_LENGTH__+0xca>
 4c6:	88 0f       	add	r24, r24
 4c8:	99 1f       	adc	r25, r25
 4ca:	6a 95       	dec	r22
 4cc:	e2 f7       	brpl	.-8      	; 0x4c6 <__EEPROM_REGION_LENGTH__+0xc6>
 4ce:	82 2b       	or	r24, r18
 4d0:	84 bb       	out	0x14, r24	; 20
 4d2:	81 e0       	ldi	r24, 0x01	; 1
 4d4:	08 95       	ret
 4d6:	21 b3       	in	r18, 0x11	; 17
 4d8:	81 e0       	ldi	r24, 0x01	; 1
 4da:	90 e0       	ldi	r25, 0x00	; 0
 4dc:	02 c0       	rjmp	.+4      	; 0x4e2 <__EEPROM_REGION_LENGTH__+0xe2>
 4de:	88 0f       	add	r24, r24
 4e0:	99 1f       	adc	r25, r25
 4e2:	6a 95       	dec	r22
 4e4:	e2 f7       	brpl	.-8      	; 0x4de <__EEPROM_REGION_LENGTH__+0xde>
 4e6:	82 2b       	or	r24, r18
 4e8:	81 bb       	out	0x11, r24	; 17
 4ea:	81 e0       	ldi	r24, 0x01	; 1
 4ec:	08 95       	ret
 4ee:	81 e0       	ldi	r24, 0x01	; 1
 4f0:	08 95       	ret
 4f2:	80 e0       	ldi	r24, 0x00	; 0
 4f4:	08 95       	ret
 4f6:	80 e0       	ldi	r24, 0x00	; 0
 4f8:	08 95       	ret

Disassembly of section .text.DIO_SetPin_Value:

000004fa <DIO_SetPin_Value>:
 4fa:	44 23       	and	r20, r20
 4fc:	19 f0       	breq	.+6      	; 0x504 <DIO_SetPin_Value+0xa>
 4fe:	41 30       	cpi	r20, 0x01	; 1
 500:	e9 f1       	breq	.+122    	; 0x57c <DIO_SetPin_Value+0x82>
 502:	74 c0       	rjmp	.+232    	; 0x5ec <DIO_SetPin_Value+0xf2>
 504:	81 30       	cpi	r24, 0x01	; 1
 506:	99 f0       	breq	.+38     	; 0x52e <DIO_SetPin_Value+0x34>
 508:	28 f0       	brcs	.+10     	; 0x514 <DIO_SetPin_Value+0x1a>
 50a:	82 30       	cpi	r24, 0x02	; 2
 50c:	e9 f0       	breq	.+58     	; 0x548 <DIO_SetPin_Value+0x4e>
 50e:	83 30       	cpi	r24, 0x03	; 3
 510:	41 f1       	breq	.+80     	; 0x562 <DIO_SetPin_Value+0x68>
 512:	6e c0       	rjmp	.+220    	; 0x5f0 <DIO_SetPin_Value+0xf6>
 514:	2b b3       	in	r18, 0x1b	; 27
 516:	81 e0       	ldi	r24, 0x01	; 1
 518:	90 e0       	ldi	r25, 0x00	; 0
 51a:	02 c0       	rjmp	.+4      	; 0x520 <DIO_SetPin_Value+0x26>
 51c:	88 0f       	add	r24, r24
 51e:	99 1f       	adc	r25, r25
 520:	6a 95       	dec	r22
 522:	e2 f7       	brpl	.-8      	; 0x51c <DIO_SetPin_Value+0x22>
 524:	80 95       	com	r24
 526:	82 23       	and	r24, r18
 528:	8b bb       	out	0x1b, r24	; 27
 52a:	81 e0       	ldi	r24, 0x01	; 1
 52c:	08 95       	ret
 52e:	28 b3       	in	r18, 0x18	; 24
 530:	81 e0       	ldi	r24, 0x01	; 1
 532:	90 e0       	ldi	r25, 0x00	; 0
 534:	02 c0       	rjmp	.+4      	; 0x53a <DIO_SetPin_Value+0x40>
 536:	88 0f       	add	r24, r24
 538:	99 1f       	adc	r25, r25
 53a:	6a 95       	dec	r22
 53c:	e2 f7       	brpl	.-8      	; 0x536 <DIO_SetPin_Value+0x3c>
 53e:	80 95       	com	r24
 540:	82 23       	and	r24, r18
 542:	88 bb       	out	0x18, r24	; 24
 544:	81 e0       	ldi	r24, 0x01	; 1
 546:	08 95       	ret
 548:	25 b3       	in	r18, 0x15	; 21
 54a:	81 e0       	ldi	r24, 0x01	; 1
 54c:	90 e0       	ldi	r25, 0x00	; 0
 54e:	02 c0       	rjmp	.+4      	; 0x554 <DIO_SetPin_Value+0x5a>
 550:	88 0f       	add	r24, r24
 552:	99 1f       	adc	r25, r25
 554:	6a 95       	dec	r22
 556:	e2 f7       	brpl	.-8      	; 0x550 <DIO_SetPin_Value+0x56>
 558:	80 95       	com	r24
 55a:	82 23       	and	r24, r18
 55c:	85 bb       	out	0x15, r24	; 21
 55e:	81 e0       	ldi	r24, 0x01	; 1
 560:	08 95       	ret
 562:	22 b3       	in	r18, 0x12	; 18
 564:	81 e0       	ldi	r24, 0x01	; 1
 566:	90 e0       	ldi	r25, 0x00	; 0
 568:	02 c0       	rjmp	.+4      	; 0x56e <DIO_SetPin_Value+0x74>
 56a:	88 0f       	add	r24, r24
 56c:	99 1f       	adc	r25, r25
 56e:	6a 95       	dec	r22
 570:	e2 f7       	brpl	.-8      	; 0x56a <DIO_SetPin_Value+0x70>
 572:	80 95       	com	r24
 574:	82 23       	and	r24, r18
 576:	82 bb       	out	0x12, r24	; 18
 578:	81 e0       	ldi	r24, 0x01	; 1
 57a:	08 95       	ret
 57c:	81 30       	cpi	r24, 0x01	; 1
 57e:	91 f0       	breq	.+36     	; 0x5a4 <DIO_SetPin_Value+0xaa>
 580:	28 f0       	brcs	.+10     	; 0x58c <DIO_SetPin_Value+0x92>
 582:	82 30       	cpi	r24, 0x02	; 2
 584:	d9 f0       	breq	.+54     	; 0x5bc <DIO_SetPin_Value+0xc2>
 586:	83 30       	cpi	r24, 0x03	; 3
 588:	29 f1       	breq	.+74     	; 0x5d4 <DIO_SetPin_Value+0xda>
 58a:	34 c0       	rjmp	.+104    	; 0x5f4 <DIO_SetPin_Value+0xfa>
 58c:	2b b3       	in	r18, 0x1b	; 27
 58e:	81 e0       	ldi	r24, 0x01	; 1
 590:	90 e0       	ldi	r25, 0x00	; 0
 592:	02 c0       	rjmp	.+4      	; 0x598 <DIO_SetPin_Value+0x9e>
 594:	88 0f       	add	r24, r24
 596:	99 1f       	adc	r25, r25
 598:	6a 95       	dec	r22
 59a:	e2 f7       	brpl	.-8      	; 0x594 <DIO_SetPin_Value+0x9a>
 59c:	82 2b       	or	r24, r18
 59e:	8b bb       	out	0x1b, r24	; 27
 5a0:	81 e0       	ldi	r24, 0x01	; 1
 5a2:	08 95       	ret
 5a4:	28 b3       	in	r18, 0x18	; 24
 5a6:	81 e0       	ldi	r24, 0x01	; 1
 5a8:	90 e0       	ldi	r25, 0x00	; 0
 5aa:	02 c0       	rjmp	.+4      	; 0x5b0 <DIO_SetPin_Value+0xb6>
 5ac:	88 0f       	add	r24, r24
 5ae:	99 1f       	adc	r25, r25
 5b0:	6a 95       	dec	r22
 5b2:	e2 f7       	brpl	.-8      	; 0x5ac <DIO_SetPin_Value+0xb2>
 5b4:	82 2b       	or	r24, r18
 5b6:	88 bb       	out	0x18, r24	; 24
 5b8:	81 e0       	ldi	r24, 0x01	; 1
 5ba:	08 95       	ret
 5bc:	25 b3       	in	r18, 0x15	; 21
 5be:	81 e0       	ldi	r24, 0x01	; 1
 5c0:	90 e0       	ldi	r25, 0x00	; 0
 5c2:	02 c0       	rjmp	.+4      	; 0x5c8 <DIO_SetPin_Value+0xce>
 5c4:	88 0f       	add	r24, r24
 5c6:	99 1f       	adc	r25, r25
 5c8:	6a 95       	dec	r22
 5ca:	e2 f7       	brpl	.-8      	; 0x5c4 <DIO_SetPin_Value+0xca>
 5cc:	82 2b       	or	r24, r18
 5ce:	85 bb       	out	0x15, r24	; 21
 5d0:	81 e0       	ldi	r24, 0x01	; 1
 5d2:	08 95       	ret
 5d4:	22 b3       	in	r18, 0x12	; 18
 5d6:	81 e0       	ldi	r24, 0x01	; 1
 5d8:	90 e0       	ldi	r25, 0x00	; 0
 5da:	02 c0       	rjmp	.+4      	; 0x5e0 <DIO_SetPin_Value+0xe6>
 5dc:	88 0f       	add	r24, r24
 5de:	99 1f       	adc	r25, r25
 5e0:	6a 95       	dec	r22
 5e2:	e2 f7       	brpl	.-8      	; 0x5dc <DIO_SetPin_Value+0xe2>
 5e4:	82 2b       	or	r24, r18
 5e6:	82 bb       	out	0x12, r24	; 18
 5e8:	81 e0       	ldi	r24, 0x01	; 1
 5ea:	08 95       	ret
 5ec:	81 e0       	ldi	r24, 0x01	; 1
 5ee:	08 95       	ret
 5f0:	80 e0       	ldi	r24, 0x00	; 0
 5f2:	08 95       	ret
 5f4:	80 e0       	ldi	r24, 0x00	; 0
 5f6:	08 95       	ret

Disassembly of section .text.DIO_GetPin_Value:

000009fe <DIO_GetPin_Value>:

ERROR_STATE DIO_GetPin_Value(DIO_Port port, DIO_Pin pin,UINT8_t* pin_value)
{
ERROR_STATE state_error = SUCCESS;
	switch (port)
 9fe:	81 30       	cpi	r24, 0x01	; 1
 a00:	91 f0       	breq	.+36     	; 0xa26 <DIO_GetPin_Value+0x28>
 a02:	28 f0       	brcs	.+10     	; 0xa0e <DIO_GetPin_Value+0x10>
 a04:	82 30       	cpi	r24, 0x02	; 2
 a06:	d9 f0       	breq	.+54     	; 0xa3e <DIO_GetPin_Value+0x40>
 a08:	83 30       	cpi	r24, 0x03	; 3
 a0a:	29 f1       	breq	.+74     	; 0xa56 <DIO_GetPin_Value+0x58>
 a0c:	30 c0       	rjmp	.+96     	; 0xa6e <DIO_GetPin_Value+0x70>
	{
		case DIO_PORTA:
		*pin_value = GET_BIT(PINA, pin);
 a0e:	89 b3       	in	r24, 0x19	; 25
 a10:	90 e0       	ldi	r25, 0x00	; 0
 a12:	02 c0       	rjmp	.+4      	; 0xa18 <DIO_GetPin_Value+0x1a>
 a14:	95 95       	asr	r25
 a16:	87 95       	ror	r24
 a18:	6a 95       	dec	r22
 a1a:	e2 f7       	brpl	.-8      	; 0xa14 <DIO_GetPin_Value+0x16>
 a1c:	81 70       	andi	r24, 0x01	; 1
 a1e:	fa 01       	movw	r30, r20
 a20:	80 83       	st	Z, r24
	return state_error;
}

ERROR_STATE DIO_GetPin_Value(DIO_Port port, DIO_Pin pin,UINT8_t* pin_value)
{
ERROR_STATE state_error = SUCCESS;
 a22:	81 e0       	ldi	r24, 0x01	; 1
	switch (port)
	{
		case DIO_PORTA:
		*pin_value = GET_BIT(PINA, pin);
		break;
 a24:	08 95       	ret
		case DIO_PORTB:
		*pin_value = GET_BIT(PINB, pin);
 a26:	86 b3       	in	r24, 0x16	; 22
 a28:	90 e0       	ldi	r25, 0x00	; 0
 a2a:	02 c0       	rjmp	.+4      	; 0xa30 <DIO_GetPin_Value+0x32>
 a2c:	95 95       	asr	r25
 a2e:	87 95       	ror	r24
 a30:	6a 95       	dec	r22
 a32:	e2 f7       	brpl	.-8      	; 0xa2c <DIO_GetPin_Value+0x2e>
 a34:	81 70       	andi	r24, 0x01	; 1
 a36:	fa 01       	movw	r30, r20
 a38:	80 83       	st	Z, r24
	return state_error;
}

ERROR_STATE DIO_GetPin_Value(DIO_Port port, DIO_Pin pin,UINT8_t* pin_value)
{
ERROR_STATE state_error = SUCCESS;
 a3a:	81 e0       	ldi	r24, 0x01	; 1
		case DIO_PORTA:
		*pin_value = GET_BIT(PINA, pin);
		break;
		case DIO_PORTB:
		*pin_value = GET_BIT(PINB, pin);
		break;
 a3c:	08 95       	ret
		case DIO_PORTC:
		*pin_value = GET_BIT(PINC, pin);
 a3e:	83 b3       	in	r24, 0x13	; 19
 a40:	90 e0       	ldi	r25, 0x00	; 0
 a42:	02 c0       	rjmp	.+4      	; 0xa48 <DIO_GetPin_Value+0x4a>
 a44:	95 95       	asr	r25
 a46:	87 95       	ror	r24
 a48:	6a 95       	dec	r22
 a4a:	e2 f7       	brpl	.-8      	; 0xa44 <DIO_GetPin_Value+0x46>
 a4c:	81 70       	andi	r24, 0x01	; 1
 a4e:	fa 01       	movw	r30, r20
 a50:	80 83       	st	Z, r24
	return state_error;
}

ERROR_STATE DIO_GetPin_Value(DIO_Port port, DIO_Pin pin,UINT8_t* pin_value)
{
ERROR_STATE state_error = SUCCESS;
 a52:	81 e0       	ldi	r24, 0x01	; 1
		case DIO_PORTB:
		*pin_value = GET_BIT(PINB, pin);
		break;
		case DIO_PORTC:
		*pin_value = GET_BIT(PINC, pin);
		break;
 a54:	08 95       	ret
		case DIO_PORTD:
		*pin_value = GET_BIT(PIND, pin);
 a56:	80 b3       	in	r24, 0x10	; 16
 a58:	90 e0       	ldi	r25, 0x00	; 0
 a5a:	02 c0       	rjmp	.+4      	; 0xa60 <DIO_GetPin_Value+0x62>
 a5c:	95 95       	asr	r25
 a5e:	87 95       	ror	r24
 a60:	6a 95       	dec	r22
 a62:	e2 f7       	brpl	.-8      	; 0xa5c <DIO_GetPin_Value+0x5e>
 a64:	81 70       	andi	r24, 0x01	; 1
 a66:	fa 01       	movw	r30, r20
 a68:	80 83       	st	Z, r24
	return state_error;
}

ERROR_STATE DIO_GetPin_Value(DIO_Port port, DIO_Pin pin,UINT8_t* pin_value)
{
ERROR_STATE state_error = SUCCESS;
 a6a:	81 e0       	ldi	r24, 0x01	; 1
		case DIO_PORTC:
		*pin_value = GET_BIT(PINC, pin);
		break;
		case DIO_PORTD:
		*pin_value = GET_BIT(PIND, pin);
		break;
 a6c:	08 95       	ret
		default:
		state_error = FAIL;
 a6e:	80 e0       	ldi	r24, 0x00	; 0
		break;
	}
	return state_error;
}
 a70:	08 95       	ret

Disassembly of section .text.libgcc.div:

00000a72 <__moddi3>:
 a72:	68 94       	set
 a74:	01 c0       	rjmp	.+2      	; 0xa78 <__divdi3_moddi3>

00000a76 <__divdi3>:
 a76:	e8 94       	clt

00000a78 <__divdi3_moddi3>:
 a78:	f9 2f       	mov	r31, r25
 a7a:	f1 2b       	or	r31, r17
 a7c:	12 f0       	brmi	.+4      	; 0xa82 <__divdi3_moddi3+0xa>
 a7e:	0c 94 2d 06 	jmp	0xc5a	; 0xc5a <__udivdi3_umoddi3>
 a82:	a0 e0       	ldi	r26, 0x00	; 0
 a84:	b0 e0       	ldi	r27, 0x00	; 0
 a86:	e7 e4       	ldi	r30, 0x47	; 71
 a88:	f5 e0       	ldi	r31, 0x05	; 5
 a8a:	0c 94 bc 05 	jmp	0xb78	; 0xb78 <__prologue_saves__+0xc>
 a8e:	09 2e       	mov	r0, r25
 a90:	05 94       	asr	r0
 a92:	22 f4       	brpl	.+8      	; 0xa9c <__divdi3_moddi3+0x24>
 a94:	0e 94 1a 06 	call	0xc34	; 0xc34 <__negdi2>
 a98:	11 23       	and	r17, r17
 a9a:	92 f4       	brpl	.+36     	; 0xac0 <__divdi3_moddi3+0x48>
 a9c:	f0 e8       	ldi	r31, 0x80	; 128
 a9e:	0f 26       	eor	r0, r31
 aa0:	ff ef       	ldi	r31, 0xFF	; 255
 aa2:	e0 94       	com	r14
 aa4:	f0 94       	com	r15
 aa6:	00 95       	com	r16
 aa8:	10 95       	com	r17
 aaa:	b0 94       	com	r11
 aac:	c0 94       	com	r12
 aae:	d0 94       	com	r13
 ab0:	a1 94       	neg	r10
 ab2:	bf 0a       	sbc	r11, r31
 ab4:	cf 0a       	sbc	r12, r31
 ab6:	df 0a       	sbc	r13, r31
 ab8:	ef 0a       	sbc	r14, r31
 aba:	ff 0a       	sbc	r15, r31
 abc:	0f 0b       	sbc	r16, r31
 abe:	1f 0b       	sbc	r17, r31
 ac0:	0e 94 32 04 	call	0x864	; 0x864 <__udivmod64>
 ac4:	07 fc       	sbrc	r0, 7
 ac6:	0e 94 1a 06 	call	0xc34	; 0xc34 <__negdi2>
 aca:	cd b7       	in	r28, 0x3d	; 61
 acc:	de b7       	in	r29, 0x3e	; 62
 ace:	ec e0       	ldi	r30, 0x0C	; 12
 ad0:	0c 94 d8 05 	jmp	0xbb0	; 0xbb0 <__epilogue_restores__+0xc>

Disassembly of section .text.libgcc.div:

00000c54 <__umoddi3>:
 c54:	68 94       	set
 c56:	01 c0       	rjmp	.+2      	; 0xc5a <__udivdi3_umoddi3>

00000c58 <__udivdi3>:
 c58:	e8 94       	clt

00000c5a <__udivdi3_umoddi3>:
 c5a:	8f 92       	push	r8
 c5c:	9f 92       	push	r9
 c5e:	cf 93       	push	r28
 c60:	df 93       	push	r29
 c62:	0e 94 32 04 	call	0x864	; 0x864 <__udivmod64>
 c66:	df 91       	pop	r29
 c68:	cf 91       	pop	r28
 c6a:	9f 90       	pop	r9
 c6c:	8f 90       	pop	r8
 c6e:	08 95       	ret

Disassembly of section .text.libgcc.div:

00000864 <__udivmod64>:
 864:	88 24       	eor	r8, r8
 866:	99 24       	eor	r9, r9
 868:	f4 01       	movw	r30, r8
 86a:	e4 01       	movw	r28, r8
 86c:	b0 e4       	ldi	r27, 0x40	; 64
 86e:	9f 93       	push	r25
 870:	aa 27       	eor	r26, r26
 872:	9a 15       	cp	r25, r10
 874:	8b 04       	cpc	r8, r11
 876:	9c 04       	cpc	r9, r12
 878:	ed 05       	cpc	r30, r13
 87a:	fe 05       	cpc	r31, r14
 87c:	cf 05       	cpc	r28, r15
 87e:	d0 07       	cpc	r29, r16
 880:	a1 07       	cpc	r26, r17
 882:	98 f4       	brcc	.+38     	; 0x8aa <__udivmod64+0x46>
 884:	ad 2f       	mov	r26, r29
 886:	dc 2f       	mov	r29, r28
 888:	cf 2f       	mov	r28, r31
 88a:	fe 2f       	mov	r31, r30
 88c:	e9 2d       	mov	r30, r9
 88e:	98 2c       	mov	r9, r8
 890:	89 2e       	mov	r8, r25
 892:	98 2f       	mov	r25, r24
 894:	87 2f       	mov	r24, r23
 896:	76 2f       	mov	r23, r22
 898:	65 2f       	mov	r22, r21
 89a:	54 2f       	mov	r21, r20
 89c:	43 2f       	mov	r20, r19
 89e:	32 2f       	mov	r19, r18
 8a0:	22 27       	eor	r18, r18
 8a2:	b8 50       	subi	r27, 0x08	; 8
 8a4:	31 f7       	brne	.-52     	; 0x872 <__udivmod64+0xe>
 8a6:	bf 91       	pop	r27
 8a8:	27 c0       	rjmp	.+78     	; 0x8f8 <__udivmod64+0x94>
 8aa:	1b 2e       	mov	r1, r27
 8ac:	bf 91       	pop	r27
 8ae:	bb 27       	eor	r27, r27
 8b0:	22 0f       	add	r18, r18
 8b2:	33 1f       	adc	r19, r19
 8b4:	44 1f       	adc	r20, r20
 8b6:	55 1f       	adc	r21, r21
 8b8:	66 1f       	adc	r22, r22
 8ba:	77 1f       	adc	r23, r23
 8bc:	88 1f       	adc	r24, r24
 8be:	99 1f       	adc	r25, r25
 8c0:	88 1c       	adc	r8, r8
 8c2:	99 1c       	adc	r9, r9
 8c4:	ee 1f       	adc	r30, r30
 8c6:	ff 1f       	adc	r31, r31
 8c8:	cc 1f       	adc	r28, r28
 8ca:	dd 1f       	adc	r29, r29
 8cc:	aa 1f       	adc	r26, r26
 8ce:	bb 1f       	adc	r27, r27
 8d0:	8a 14       	cp	r8, r10
 8d2:	9b 04       	cpc	r9, r11
 8d4:	ec 05       	cpc	r30, r12
 8d6:	fd 05       	cpc	r31, r13
 8d8:	ce 05       	cpc	r28, r14
 8da:	df 05       	cpc	r29, r15
 8dc:	a0 07       	cpc	r26, r16
 8de:	b1 07       	cpc	r27, r17
 8e0:	48 f0       	brcs	.+18     	; 0x8f4 <__udivmod64+0x90>
 8e2:	8a 18       	sub	r8, r10
 8e4:	9b 08       	sbc	r9, r11
 8e6:	ec 09       	sbc	r30, r12
 8e8:	fd 09       	sbc	r31, r13
 8ea:	ce 09       	sbc	r28, r14
 8ec:	df 09       	sbc	r29, r15
 8ee:	a0 0b       	sbc	r26, r16
 8f0:	b1 0b       	sbc	r27, r17
 8f2:	21 60       	ori	r18, 0x01	; 1
 8f4:	1a 94       	dec	r1
 8f6:	e1 f6       	brne	.-72     	; 0x8b0 <__udivmod64+0x4c>
 8f8:	2e f4       	brtc	.+10     	; 0x904 <__udivmod64+0xa0>
 8fa:	94 01       	movw	r18, r8
 8fc:	af 01       	movw	r20, r30
 8fe:	be 01       	movw	r22, r28
 900:	cd 01       	movw	r24, r26
 902:	00 0c       	add	r0, r0
 904:	08 95       	ret

Disassembly of section .text.libgcc:

00000c34 <__negdi2>:
 c34:	60 95       	com	r22
 c36:	70 95       	com	r23
 c38:	80 95       	com	r24
 c3a:	90 95       	com	r25
 c3c:	30 95       	com	r19
 c3e:	40 95       	com	r20
 c40:	50 95       	com	r21
 c42:	21 95       	neg	r18
 c44:	3f 4f       	sbci	r19, 0xFF	; 255
 c46:	4f 4f       	sbci	r20, 0xFF	; 255
 c48:	5f 4f       	sbci	r21, 0xFF	; 255
 c4a:	6f 4f       	sbci	r22, 0xFF	; 255
 c4c:	7f 4f       	sbci	r23, 0xFF	; 255
 c4e:	8f 4f       	sbci	r24, 0xFF	; 255
 c50:	9f 4f       	sbci	r25, 0xFF	; 255
 c52:	08 95       	ret

Disassembly of section .text.libgcc.prologue:

00000b6c <__prologue_saves__>:
 b6c:	2f 92       	push	r2
 b6e:	3f 92       	push	r3
 b70:	4f 92       	push	r4
 b72:	5f 92       	push	r5
 b74:	6f 92       	push	r6
 b76:	7f 92       	push	r7
 b78:	8f 92       	push	r8
 b7a:	9f 92       	push	r9
 b7c:	af 92       	push	r10
 b7e:	bf 92       	push	r11
 b80:	cf 92       	push	r12
 b82:	df 92       	push	r13
 b84:	ef 92       	push	r14
 b86:	ff 92       	push	r15
 b88:	0f 93       	push	r16
 b8a:	1f 93       	push	r17
 b8c:	cf 93       	push	r28
 b8e:	df 93       	push	r29
 b90:	cd b7       	in	r28, 0x3d	; 61
 b92:	de b7       	in	r29, 0x3e	; 62
 b94:	ca 1b       	sub	r28, r26
 b96:	db 0b       	sbc	r29, r27
 b98:	0f b6       	in	r0, 0x3f	; 63
 b9a:	f8 94       	cli
 b9c:	de bf       	out	0x3e, r29	; 62
 b9e:	0f be       	out	0x3f, r0	; 63
 ba0:	cd bf       	out	0x3d, r28	; 61
 ba2:	09 94       	ijmp

Disassembly of section .text.libgcc.prologue:

00000ba4 <__epilogue_restores__>:
 ba4:	2a 88       	ldd	r2, Y+18	; 0x12
 ba6:	39 88       	ldd	r3, Y+17	; 0x11
 ba8:	48 88       	ldd	r4, Y+16	; 0x10
 baa:	5f 84       	ldd	r5, Y+15	; 0x0f
 bac:	6e 84       	ldd	r6, Y+14	; 0x0e
 bae:	7d 84       	ldd	r7, Y+13	; 0x0d
 bb0:	8c 84       	ldd	r8, Y+12	; 0x0c
 bb2:	9b 84       	ldd	r9, Y+11	; 0x0b
 bb4:	aa 84       	ldd	r10, Y+10	; 0x0a
 bb6:	b9 84       	ldd	r11, Y+9	; 0x09
 bb8:	c8 84       	ldd	r12, Y+8	; 0x08
 bba:	df 80       	ldd	r13, Y+7	; 0x07
 bbc:	ee 80       	ldd	r14, Y+6	; 0x06
 bbe:	fd 80       	ldd	r15, Y+5	; 0x05
 bc0:	0c 81       	ldd	r16, Y+4	; 0x04
 bc2:	1b 81       	ldd	r17, Y+3	; 0x03
 bc4:	aa 81       	ldd	r26, Y+2	; 0x02
 bc6:	b9 81       	ldd	r27, Y+1	; 0x01
 bc8:	ce 0f       	add	r28, r30
 bca:	d1 1d       	adc	r29, r1
 bcc:	0f b6       	in	r0, 0x3f	; 63
 bce:	f8 94       	cli
 bd0:	de bf       	out	0x3e, r29	; 62
 bd2:	0f be       	out	0x3f, r0	; 63
 bd4:	cd bf       	out	0x3d, r28	; 61
 bd6:	ed 01       	movw	r28, r26
 bd8:	08 95       	ret

Disassembly of section .text.libgcc:

00000c70 <__cmpdi2_s8>:
 c70:	00 24       	eor	r0, r0
 c72:	a7 fd       	sbrc	r26, 7
 c74:	00 94       	com	r0
 c76:	2a 17       	cp	r18, r26
 c78:	30 05       	cpc	r19, r0
 c7a:	40 05       	cpc	r20, r0
 c7c:	50 05       	cpc	r21, r0
 c7e:	60 05       	cpc	r22, r0
 c80:	70 05       	cpc	r23, r0
 c82:	80 05       	cpc	r24, r0
 c84:	90 05       	cpc	r25, r0
 c86:	08 95       	ret

Disassembly of section .text.__dummy_fini:

00000cd4 <_fini>:
 cd4:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000cd6 <__funcs_on_exit>:
 cd6:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000cd8 <__simulator_exit>:
 cd8:	08 95       	ret

Disassembly of section .text.exit:

00000c88 <exit>:
 c88:	ec 01       	movw	r28, r24
 c8a:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <__funcs_on_exit>
 c8e:	0e 94 6a 06 	call	0xcd4	; 0xcd4 <_fini>
 c92:	ce 01       	movw	r24, r28
 c94:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <__simulator_exit>
 c98:	ce 01       	movw	r24, r28
 c9a:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_Exit>

Disassembly of section .text._Exit:

00000cd0 <_Exit>:
 cd0:	0e 94 55 00 	call	0xaa	; 0xaa <_exit>
